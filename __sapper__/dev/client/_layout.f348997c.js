import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, r as validate_store, t as component_subscribe, v as validate_slots, Y as beforeUpdate, o as onMount, W as globals, e as element, E as text, b as space, f as claim_element, g as children, F as claim_text, h as detach_dev, j as claim_space, k as attr_dev, l as add_location, n as insert_dev, m as append_dev, G as listen_dev, p as noop, H as run_all, C as set_store_value, Z as create_slot, u as create_component, w as claim_component, x as mount_component, _ as update_slot, A as transition_in, y as transition_out, B as destroy_component } from './client.bca5f36b.js';
import { c as character } from './characterStore.ea10e9be.js';
import { S as Skills } from './Skills.35c4252b.js';
import './Specialty.adf26afb.js';
import './ConstitutionSkills.56e093ee.js';
import './RandomRoll.f18d347c.js';
import { T as Traits } from './Traits.2656d3ca.js';

/* src/routes/character/creator/_navbar.svelte generated by Svelte v3.29.0 */

const { Object: Object_1 } = globals;
const file = "src/routes/character/creator/_navbar.svelte";

function create_fragment(ctx) {
	let div;
	let button0;
	let t0;
	let t1;
	let button1;
	let t2;
	let t3;
	let button2;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			div = element("div");
			button0 = element("button");
			t0 = text("◂");
			t1 = space();
			button1 = element("button");
			t2 = text("Home");
			t3 = space();
			button2 = element("button");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			button0 = claim_element(div_nodes, "BUTTON", { class: true });
			var button0_nodes = children(button0);
			t0 = claim_text(button0_nodes, "◂");
			button0_nodes.forEach(detach_dev);
			t1 = claim_space(div_nodes);
			button1 = claim_element(div_nodes, "BUTTON", { class: true });
			var button1_nodes = children(button1);
			t2 = claim_text(button1_nodes, "Home");
			button1_nodes.forEach(detach_dev);
			t3 = claim_space(div_nodes);
			button2 = claim_element(div_nodes, "BUTTON", { class: true });
			var button2_nodes = children(button2);
			button2_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(button0, "class", "link-btn nav-button svelte-lvfy6h");
			add_location(button0, file, 63, 1, 1667);
			attr_dev(button1, "class", "link-btn nav-button home-button svelte-lvfy6h");
			add_location(button1, file, 64, 1, 1737);
			attr_dev(button2, "class", "link-btn nav-button svelte-lvfy6h");
			add_location(button2, file, 65, 1, 1816);
			attr_dev(div, "class", "nav-bar svelte-lvfy6h");
			add_location(div, file, 62, 0, 1644);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, button0);
			append_dev(button0, t0);
			append_dev(div, t1);
			append_dev(div, button1);
			append_dev(button1, t2);
			append_dev(div, t3);
			append_dev(div, button2);
			button2.innerHTML = /*nextButton*/ ctx[0];

			if (!mounted) {
				dispose = [
					listen_dev(button0, "click", /*back*/ ctx[1], false, false, false),
					listen_dev(button1, "click", /*home*/ ctx[2], false, false, false),
					listen_dev(button2, "click", /*next*/ ctx[3], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*nextButton*/ 1) button2.innerHTML = /*nextButton*/ ctx[0];		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let $character;
	validate_store(character, "character");
	component_subscribe($$self, character, $$value => $$invalidate(6, $character = $$value));
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Navbar", slots, []);

	const pages = [
		"/",
		"/character/creator/description",
		"/character/creator/traits",
		"/character/creator/skills",
		"/character/creator/properties",
		"/character/creator/abilities",
		"/character/creator/gear",
		"/character/creator/sheet",
		"/"
	];

	let proceed;

	const back = () => {
		set_store_value(character, $character.meta.status.step -= 1, $character);
		character.set($character);
	}; // window.location.assign(`www.apocalyptiaonline.com/${pages[$character.meta.status.step]}`)

	const home = () => {
		set_store_value(character, $character.meta.status.step = 1, $character);
		character.set($character);
	}; // window.location.assign('www.apocalyptiaonline.com')

	const next = () => {
		checkStatus();

		if (proceed) {
			set_store_value(character, $character.meta.status.step += 1, $character);
			character.set($character);
		} // window.location.assign(`www.apocalyptiaonline.com/${pages[$character.meta.status.step]}`)
	};

	const checkStatus = () => {
		proceed = true;
		if (current == 1 && Object.values($character.desc).some(d => d.value == ``) || current == 2 && Traits.remaining($character) > 0 || current == 3 && Skills.remaining($character) > 0 || current == 6 && Object.values($character.gear).some(g => g.inventory.length == 0)) proceed = false;
		if (proceed) $$invalidate(0, nextButton = "&rtrif;"); else $$invalidate(0, nextButton = "&#10006;");
	};

	beforeUpdate(_ => checkStatus());
	onMount(_ => checkStatus());
	const writable_props = [];

	Object_1.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Navbar> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({
		character,
		beforeUpdate,
		onMount,
		Traits,
		Skills,
		pages,
		proceed,
		back,
		home,
		next,
		checkStatus,
		current,
		$character,
		nextButton
	});

	$$self.$inject_state = $$props => {
		if ("proceed" in $$props) proceed = $$props.proceed;
		if ("current" in $$props) current = $$props.current;
		if ("nextButton" in $$props) $$invalidate(0, nextButton = $$props.nextButton);
	};

	let current;
	let nextButton;

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*$character*/ 64) {
			 current = $character.meta.status.step;
		}
	};

	 $$invalidate(0, nextButton = "X");
	return [nextButton, back, home, next];
}

class Navbar extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Navbar",
			options,
			id: create_fragment.name
		});
	}
}

/* src/routes/character/creator/_layout.svelte generated by Svelte v3.29.0 */
const file$1 = "src/routes/character/creator/_layout.svelte";

function create_fragment$1(ctx) {
	let div;
	let t;
	let navbar;
	let current;
	const default_slot_template = /*#slots*/ ctx[1].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[0], null);
	navbar = new Navbar({ $$inline: true });

	const block = {
		c: function create() {
			div = element("div");
			if (default_slot) default_slot.c();
			t = space();
			create_component(navbar.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			if (default_slot) default_slot.l(div_nodes);
			div_nodes.forEach(detach_dev);
			t = claim_space(nodes);
			claim_component(navbar.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", "creator-page svelte-s9i01e");
			add_location(div, file$1, 5, 0, 63);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);

			if (default_slot) {
				default_slot.m(div, null);
			}

			insert_dev(target, t, anchor);
			mount_component(navbar, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 1) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[0], dirty, null, null);
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(default_slot, local);
			transition_in(navbar.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(default_slot, local);
			transition_out(navbar.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			if (default_slot) default_slot.d(detaching);
			if (detaching) detach_dev(t);
			destroy_component(navbar, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Layout", slots, ['default']);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Layout> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("$$scope" in $$props) $$invalidate(0, $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => ({ NavBar: Navbar });
	return [$$scope, slots];
}

class Layout extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Layout",
			options,
			id: create_fragment$1.name
		});
	}
}

export default Layout;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiX2xheW91dC5mMzQ4OTk3Yy5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcy9jaGFyYWN0ZXIvY3JlYXRvci9fbmF2YmFyLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuXHRpbXBvcnQgeyBjaGFyYWN0ZXIgfSBmcm9tICdzdG9yZXMvY2hhcmFjdGVyU3RvcmUuanMnXG5cdGltcG9ydCB7IGJlZm9yZVVwZGF0ZSwgb25Nb3VudCB9IGZyb20gJ3N2ZWx0ZSdcblx0aW1wb3J0IFRyYWl0cyBmcm9tICdydWxlcy90cmFpdHMvVHJhaXRzLmpzJ1xuXHRpbXBvcnQgU2tpbGxzIGZyb20gJ3J1bGVzL3NraWxscy9Ta2lsbHMuanMnXG5cblx0Y29uc3QgcGFnZXMgPSBbXG4gICAgICAgICcvJyxcbiAgICAgICAgJy9jaGFyYWN0ZXIvY3JlYXRvci9kZXNjcmlwdGlvbicsXG4gICAgICAgICcvY2hhcmFjdGVyL2NyZWF0b3IvdHJhaXRzJyxcbiAgICAgICAgJy9jaGFyYWN0ZXIvY3JlYXRvci9za2lsbHMnLFxuICAgICAgICAnL2NoYXJhY3Rlci9jcmVhdG9yL3Byb3BlcnRpZXMnLFxuICAgICAgICAnL2NoYXJhY3Rlci9jcmVhdG9yL2FiaWxpdGllcycsXG4gICAgICAgICcvY2hhcmFjdGVyL2NyZWF0b3IvZ2VhcicsXG4gICAgICAgICcvY2hhcmFjdGVyL2NyZWF0b3Ivc2hlZXQnLFxuICAgICAgICAnLydcblx0XVxuXG5cdGxldCBwcm9jZWVkXG5cblx0JDogY3VycmVudCA9ICRjaGFyYWN0ZXIubWV0YS5zdGF0dXMuc3RlcFxuXG5cdCQ6IG5leHRCdXR0b24gPSAnWCdcblxuXHRjb25zdCBiYWNrID0gKCkgPT4ge1xuXHRcdCRjaGFyYWN0ZXIubWV0YS5zdGF0dXMuc3RlcCAtPSAxXG5cdFx0JGNoYXJhY3RlciA9ICRjaGFyYWN0ZXJcblx0XHQvLyB3aW5kb3cubG9jYXRpb24uYXNzaWduKGB3d3cuYXBvY2FseXB0aWFvbmxpbmUuY29tLyR7cGFnZXNbJGNoYXJhY3Rlci5tZXRhLnN0YXR1cy5zdGVwXX1gKVxuXHR9XG5cblx0Y29uc3QgaG9tZSA9ICgpID0+IHtcblx0XHQkY2hhcmFjdGVyLm1ldGEuc3RhdHVzLnN0ZXAgPSAxXG5cdFx0JGNoYXJhY3RlciA9ICRjaGFyYWN0ZXJcblx0XHQvLyB3aW5kb3cubG9jYXRpb24uYXNzaWduKCd3d3cuYXBvY2FseXB0aWFvbmxpbmUuY29tJylcblx0fVxuXG5cdGNvbnN0IG5leHQgPSAoKSA9PiB7XG5cdFx0Y2hlY2tTdGF0dXMoKVxuXHRcdGlmIChwcm9jZWVkKSB7XG5cdFx0XHQkY2hhcmFjdGVyLm1ldGEuc3RhdHVzLnN0ZXAgKz0gMVxuXHRcdFx0JGNoYXJhY3RlciA9ICRjaGFyYWN0ZXJcblx0XHRcdC8vIHdpbmRvdy5sb2NhdGlvbi5hc3NpZ24oYHd3dy5hcG9jYWx5cHRpYW9ubGluZS5jb20vJHtwYWdlc1skY2hhcmFjdGVyLm1ldGEuc3RhdHVzLnN0ZXBdfWApXG5cdFx0fVxuXHR9XG5cblx0Y29uc3QgY2hlY2tTdGF0dXMgPSAoKSA9PiB7XG5cdFx0cHJvY2VlZCA9IHRydWVcblx0XHRpZiAoXG5cdFx0XHQoY3VycmVudCA9PSAxICYmIE9iamVjdC52YWx1ZXMoJGNoYXJhY3Rlci5kZXNjKS5zb21lKGQgPT4gZC52YWx1ZSA9PSBgYCkpIHx8XG5cdFx0XHQoY3VycmVudCA9PSAyICYmIFRyYWl0cy5yZW1haW5pbmcoJGNoYXJhY3RlcikgPiAwKSB8fFxuXHRcdFx0KGN1cnJlbnQgPT0gMyAmJiBTa2lsbHMucmVtYWluaW5nKCRjaGFyYWN0ZXIpID4gMCkgfHxcblx0XHRcdChjdXJyZW50ID09IDYgJiYgT2JqZWN0LnZhbHVlcygkY2hhcmFjdGVyLmdlYXIpLnNvbWUoZyA9PiBnLmludmVudG9yeS5sZW5ndGggPT0gMCkpXG5cdFx0KSBwcm9jZWVkID0gZmFsc2Vcblx0XHRpZiAocHJvY2VlZCkgbmV4dEJ1dHRvbiA9ICcmcnRyaWY7J1xuXHRcdGVsc2UgbmV4dEJ1dHRvbiA9ICcmIzEwMDA2Oydcblx0fVxuXG5cdGJlZm9yZVVwZGF0ZShfID0+IGNoZWNrU3RhdHVzKCkpXG5cdG9uTW91bnQoXyA9PiBjaGVja1N0YXR1cygpKVxuPC9zY3JpcHQ+XG5cblxuPGRpdiBjbGFzcz0nbmF2LWJhcic+XG5cdDxidXR0b24gb246Y2xpY2s9e2JhY2t9IGNsYXNzPSdsaW5rLWJ0biBuYXYtYnV0dG9uJz4mbHRyaWY7PC9idXR0b24+XG5cdDxidXR0b24gb246Y2xpY2s9e2hvbWV9IGNsYXNzPSdsaW5rLWJ0biBuYXYtYnV0dG9uIGhvbWUtYnV0dG9uJz5Ib21lPC9idXR0b24+XG5cdDxidXR0b24gb246Y2xpY2s9e25leHR9IGNsYXNzPSdsaW5rLWJ0biBuYXYtYnV0dG9uJz57QGh0bWwgbmV4dEJ1dHRvbn08L2J1dHRvbj5cbjwvZGl2PlxuXG5cbjxzdHlsZT5cblx0Lm5hdi1iYXIge1xuXHRcdGJvdHRvbTogMDtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdGhlaWdodDogdmFyKC0tczMwMCk7XG5cdFx0bGVmdDogMDtcblx0XHRwb3NpdGlvbjogZml4ZWQ7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdFx0ei1pbmRleDogMjtcblx0fVxuXHQubmF2LWJ1dHRvbiB7XG5cdFx0ZmxleDogMTtcblx0fVxuXHQuaG9tZS1idXR0b24ge1xuXHRcdGZvbnQtc2l6ZTogdmFyKC0tczEyNSk7XG5cdH1cbjwvc3R5bGU+Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztzQ0FpRTRELEdBQVU7Ozs7MkNBRm5ELEdBQUk7MkNBQ0osR0FBSTsyQ0FDSixHQUFJOzs7Ozs7O29FQUFxQyxHQUFVOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O09BM0QvRCxLQUFLO0VBQ0osR0FBRztFQUNILGdDQUFnQztFQUNoQywyQkFBMkI7RUFDM0IsMkJBQTJCO0VBQzNCLCtCQUErQjtFQUMvQiw4QkFBOEI7RUFDOUIseUJBQXlCO0VBQ3pCLDBCQUEwQjtFQUMxQixHQUFHOzs7S0FHTixPQUFPOztPQU1MLElBQUk7NkJBQ1QsVUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFJLENBQUM7Ozs7T0FLM0IsSUFBSTs2QkFDVCxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEdBQUcsQ0FBQzs7OztPQUsxQixJQUFJO0VBQ1QsV0FBVzs7TUFDUCxPQUFPOzhCQUNWLFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksSUFBSSxDQUFDOzs7OztPQU01QixXQUFXO0VBQ2hCLE9BQU8sR0FBRyxJQUFJO01BRVosT0FBTyxJQUFJLENBQUMsSUFBSSxNQUFNLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxXQUNoRSxPQUFPLElBQUksQ0FBQyxJQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsVUFBVSxJQUFJLENBQUMsSUFDaEQsT0FBTyxJQUFJLENBQUMsSUFBSSxNQUFNLENBQUMsU0FBUyxDQUFDLFVBQVUsSUFBSSxDQUFDLElBQ2hELE9BQU8sSUFBSSxDQUFDLElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLFNBQVMsQ0FBQyxNQUFNLElBQUksQ0FBQyxHQUNoRixPQUFPLEdBQUcsS0FBSztNQUNiLE9BQU8sa0JBQUUsVUFBVSxHQUFHLFNBQVMsd0JBQzlCLFVBQVUsR0FBRyxVQUFVOzs7Q0FHN0IsWUFBWSxDQUFDLENBQUMsSUFBSSxXQUFXO0NBQzdCLE9BQU8sQ0FBQyxDQUFDLElBQUksV0FBVzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBdENyQixPQUFPLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSTs7OztrQkFFckMsVUFBVSxHQUFHLEdBQUc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
