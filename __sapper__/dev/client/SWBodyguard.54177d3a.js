class Rule {
	constructor({
		id = null,
		name=``,
		desc=[],
		formula,
		visible=false
	}) {
		this.id = id;
		this.name = name;
		this.desc = desc;
		this.formula = formula;
		this.visible = visible;
	}
}

class Gear extends Rule {
	constructor({
		id,
		name,
		desc,
		sz,
		qty=0
	}) {
		super({
			id,
			name,
			desc
		});
		this.sz = sz;
		this.qty = qty;
	}
}

class CombatGear extends Gear {
	constructor({
		id,
		name,
		desc,
		sz,
		qty,
		attr=[]
	}) {
		super({
			id,
			name,
			desc,
			sz,
			qty
		});
		this.attr = attr;
	}
}

class Attribute extends Rule {
	constructor({
		id,
		name,
		desc
	}) {
		super({
			id,
			name,
			desc
		});
	}
}

class WeaponAttr extends Attribute {
	constructor({
		id,
		name,
		desc
	}) {
		super({
			id,
			name,
			desc
		});
	}
}

const Pierce = new WeaponAttr({
	id: `f6f168a6-d4cc-4780-19b8-0da4803bcc14`,
	name: `Pierce`,
	desc: [
		`+1 Damage to Body Parts with Armor.`,
	]
});

const Scatter = new WeaponAttr({
	id: `b59d0456-6b50-466d-1a78-d5446739da0b`,
	name: `Scatter`,
	desc: [
		`Ignore Range penalties.`,
		`-1 Damage per extended Range.`,
	]
});

class Weapon extends CombatGear {
	constructor({
		id,
		name,
		desc,
		sz,
		qty,
		attr,
		dmg,
		rng
	}) {
		super({
			id,
			name,
			desc,
			sz,
			qty,
			attr
		});
		this.dmg = dmg;
		this.rng = rng;
	}
}

class MeleeWeapon extends Weapon {
	constructor({
		id,
		name,
		desc,
		sz,
		qty,
		dmg,
		rng,
		attr
	}) {
		super({
			id,
			name,
			desc,
			sz,
			qty,
			dmg,
			rng,
			attr
		});
	}
}

const TwoHanded = new WeaponAttr({
	id: `ff319545-04eb-431d-c344-cd8c6a38ef6a`,
	name: `2h`,
	desc: [
		`Normally used two-handed.`,
		`Can be used one-handed at a penalty = Size.`,
	]
});

const Chop = new WeaponAttr({
	id: `6468d427-de5b-4395-a7a8-19faa2b1be6d`,
	name: `Chop`,
	desc: [
		`+1 Damage to Body Parts with no Armor.`,
	]
});

const Slow = new WeaponAttr({
	id: `68f3481c-6392-4959-9e90-afe0a6e6a2c1`,
	name: `Slow`,
	desc: [
		`Penalty to Speed = Size.`,
	]
});

const Ax = new MeleeWeapon({
	id: `a9aead5f-27f8-4727-84b0-6fdd536d52f8`,
	name: `Ax`,
	sz: 4,
	dmg: 4,
	rng: 2,
	attr: [
		TwoHanded,
		Chop,
		Slow,
	]
});

const Blunt = new WeaponAttr({
	id: `2da79249-615a-4b20-2970-4164da947fd9`,
	name: `Blunt`,
	desc: [
		`Does not cause Bleeding.`,
	]
});

const BaseballBat = new MeleeWeapon({
	id: `16a7ae03-024b-450b-9ce9-082b225f3021`,
	name: `Baseball Bat`,
	sz: 3,
	dmg: 3,
	rng: 2,
	attr: [
		TwoHanded,
		Blunt,
	]
});

const OneHanded = new WeaponAttr({
	id: `4f631ce3-848f-43e6-b8ca-7f273b0b7da4`,
	name: `1h`,
	desc: [
		`Normally used one-handed.`,
	]
});

const BrassKnuckles = new MeleeWeapon({
	id: `eaf2a5df-a818-4ec7-bace-25a303895fd8`,
	name: `Brass Knuckles`,
	sz: 1,
	dmg: 1,
	rng: 1,
	attr: [
		OneHanded,
		Blunt,
	]
});

const Club = new MeleeWeapon({
	id: `5f8b0bd9-1b1c-4c44-9c31-e76db4f4a663`,
	name: `Club`,
	sz: 2,
	dmg: 2,
	rng: 2,
	attr: [
		OneHanded,
		Blunt,
	]
});

const Crowbar = new MeleeWeapon({
	id: `328afbe9-a374-486f-b41b-2f4e4e7f8958`,
	name: `Crowbar`,
	sz: 3,
	dmg: 3,
	rng: 2,
	attr: [
		OneHanded,
	]
});

const Hammer = new MeleeWeapon({
	id: `76f801f0-72e6-4b92-ab5a-61d8728da9dc`,
	name: `Hammer`,
	sz: 2,
	dmg: 2,
	rng: 1,
	attr: [
		OneHanded,
		Blunt,
	]
});

const Hatchet = new MeleeWeapon({
	id: `fcb3667d-44e2-4faf-b404-1aa9e0c0af09`,
	name: `Hatchet`,
	sz: 2,
	dmg: 2,
	rng: 1,
	attr: [
		OneHanded,
		Chop,
	]
});

const Rapid = new WeaponAttr({
	id: `45150ffe-a64e-4a0b-073a-2fc873a551a7`,
	name: `Rapid`,
	desc: [
		`You can make 2 Attacks at the same target for 1 Action.`,
	]
});

const Knife = new MeleeWeapon({
	id: `077adc37-a0e4-4282-8641-74c648c8f5cd`,
	name: `Knife`,
	sz: 1,
	dmg: 1,
	rng: 1,
	attr: [
		OneHanded,
		Pierce,
		Rapid,
	]
});

const Machete = new MeleeWeapon({
	id: `3e6a26a1-df4c-45db-acf0-a33f0948dc5f`,
	name: `Machete`,
	sz: 2,
	dmg: 3,
	rng: 2,
	attr: [
		OneHanded,
		Chop,
	]
});

const Shield = new WeaponAttr({
	id: `041726f9-6f64-42d4-ca8b-613fabd40bf4`,
	name: `Shield`,
	desc: [
		`Provides 3 Damage Resistance Cover.`,
		`+3 to Block.`,
	]
});

const RiotShield = new MeleeWeapon({
	id: `0e48721b-f535-483a-8bba-1d9e167c38fa`,
	name: `Riot Shield`,
	sz: 4,
	dmg: 0,
	rng: 1,
	attr: [
		OneHanded,
		Blunt,
		Shield,
	]
});

const Sledgehammer = new MeleeWeapon({
	id: `746da84b-263b-4b41-90c4-a512014e86d7`,
	name: `Sledgehammer`,
	sz: 5,
	dmg: 4,
	rng: 2,
	attr: [
		TwoHanded,
		Blunt,
		Slow,
	]
});

const Spear = new MeleeWeapon({
	id: `d6b2d895-68be-4489-86bb-a80a13997e1d`,
	name: `Spear`,
	sz: 3,
	dmg: 4,
	rng: 3,
	attr: [
		OneHanded,
		Pierce,
	]
});

const Staff = new MeleeWeapon({
	id: `1fab5144-0cd7-440c-93ab-2a9c849941e7`,
	name: `Staff`,
	sz: 3,
	dmg: 2,
	rng: 3,
	attr: [
		TwoHanded,
		Blunt,
	]
});

class RangedWeapon extends Weapon {
	constructor({
		id,
		name,
		desc,
		sz,
		qty,
		dmg,
		rng,
		attr,
		cap,
		cal
	}) {
		super({
			id,
			name,
			desc,
			sz,
			qty,
			dmg,
			rng,
			attr
		});
		this.cap = cap;
		this.cal = cal;
	}
}

const AR15 = new RangedWeapon({
	id: `69cd0033-60ad-4d4c-aac2-d9584e5766a1`,
	name: `AR-15`,
	sz: 3,
	dmg: 2,
	rng: 30,
	attr: [
		TwoHanded,
		Rapid,
	],
	cap: 30,
	cal: `5.56`
});

const BenelliM4 = new RangedWeapon({
	id: `00b5ce6e-ce91-4a68-856e-f72538af0261`,
	name: `Benelli M4`,
	sz: 4,
	dmg: 4,
	rng: 15,
	attr: [
		TwoHanded,
		Rapid,
		Scatter,
	],
	cap: 6,
	cal: `12g`
});

const BrowningABolt = new RangedWeapon({
	id: `dc61759b-4432-456b-91c5-981c3b34fc65`,
	name: `Browning A-Bolt`,
	sz: 4,
	dmg: 3,
	rng: 60,
	attr: [
		TwoHanded,
	],
	cap: 5,
	cal: `5.56`
});

const ColtPython = new RangedWeapon({
	id: `8c4ba934-2850-4025-a9bf-188cc08a1c9c`,
	name: `Colt Python`,
	sz: 1,
	dmg: 2,
	rng: 10,
	attr: [
		TwoHanded,
	],
	cap: 6,
	cal: `.357`
});

const CompoundBow = new RangedWeapon({
	id: `8c4ba934-2850-4025-a9bf-188cc08a1c9c`,
	name: `Compound Bow`,
	sz: 3,
	dmg: 1,
	rng: 15,
	attr: [
		TwoHanded,
	],
	cap: 1,
	cal: `Arrow`
});

const Crossbow = new RangedWeapon({
	id: `5f42d732-9acb-40b6-b74d-fc2e42e107c6`,
	name: `Crossbow`,
	sz: 3,
	dmg: 2,
	rng: 15,
	attr: [
		TwoHanded,
	],
	cap: 1,
	cal: `Arrow`
});

const Glock17 = new RangedWeapon({
	id: `5f42d732-9acb-40b6-b74d-fc2e42e107c6`,
	name: `Glock 17`,
	sz: 1,
	dmg: 1,
	rng: 10,
	attr: [
		TwoHanded,
		Rapid,
	],
	cap: 17,
	cal: `9mm`
});

const HenryGoldenBoy = new RangedWeapon({
	id: `a0cf85b3-ead3-4460-889a-83e4938c8598`,
	name: `Henry Golden Boy`,
	sz: 3,
	dmg: 1,
	rng: 30,
	attr: [
		TwoHanded,
	],
	cap: 16,
	cal: `.357`
});

const Auto = new WeaponAttr({
	id: `5a0a12f5-55ab-474e-936a-13926dcbe470`,
	name: `Auto`,
	desc: [
		`Choose either Burst or Spray.`,
		`Burst: +3 Ranged Attack vs one target.`,
		`Spray: 3yd Blast Attack.`,
		`Uses 10 bullets.`,
	]
});

const HKMP5 = new RangedWeapon({
	id: `e9381665-1e1f-48ff-b07f-80bba3f81773`,
	name: `H&K MP5`,
	sz: 3,
	dmg: 1,
	rng: 20,
	attr: [
		TwoHanded,
		Auto,
		Rapid,
	],
	cap: 30,
	cal: `9mm`
});

const Marlin1894 = new RangedWeapon({
	id: `19c418dd-d00d-4a43-bc71-7c373d8aefe9`,
	name: `Marlin 1894`,
	sz: 3,
	dmg: 2,
	rng: 30,
	attr: [
		TwoHanded,
	],
	cap: 9,
	cal: `.357`
});

const Mossberg500 = new RangedWeapon({
	id: `6f193dc4-5a9e-4eb5-bdf6-59e0ca24c56a`,
	name: `Mossberg 500`,
	sz: 2,
	dmg: 4,
	rng: 10,
	attr: [
		TwoHanded,
		Scatter,
	],
	cap: 5,
	cal: `12g`
});

const RecurveBow = new RangedWeapon({
	id: `6852a491-fb8d-4fc3-a35e-2986ee70cd3f`,
	name: `Recurve Bow`,
	sz: 2,
	dmg: 1,
	rng: 10,
	attr: [
		TwoHanded,
	],
	cap: 1,
	cal: `Arrow`
});

const Remington700 = new RangedWeapon({
	id: `6398a22b-e4a9-4c9f-a984-3bf6aaa09146`,
	name: `Remington 700`,
	sz: 4,
	dmg: 3,
	rng: 100,
	attr: [
		TwoHanded,
	],
	cap: 5,
	cal: `.308`
});

const Remington870 = new RangedWeapon({
	id: `6398a22b-e4a9-4c9f-a984-3bf6aaa09146`,
	name: `Remington 870`,
	sz: 4,
	dmg: 4,
	rng: 15,
	attr: [
		TwoHanded,
		Scatter,
	],
	cap: 6,
	cal: `12g`
});

const Ruger1022 = new RangedWeapon({
	id: `94dc2629-a460-4bdc-a90f-0ade229af021`,
	name: `Ruger 10/22`,
	sz: 3,
	dmg: 1,
	rng: 30,
	attr: [
		TwoHanded,
		Rapid,
	],
	cap: 10,
	cal: `.22`
});

const RugerMkIII = new RangedWeapon({
	id: `739a925f-6d37-4e3f-a15d-af15248fbe1e`,
	name: `Ruger Mk.III`,
	sz: 1,
	dmg: 1,
	rng: 15,
	attr: [
		TwoHanded,
		Rapid,
	],
	cap: 10,
	cal: `.22`
});

const SavageMkII = new RangedWeapon({
	id: `8465b895-4bd0-4c54-b1bb-f411a962ddbb`,
	name: `Savage Mk.II`,
	sz: 3,
	dmg: 1,
	rng: 40,
	attr: [
		TwoHanded,
	],
	cap: 10,
	cal: `.22`
});

const SIGSauerP290 = new RangedWeapon({
	id: `16cffbd6-54af-49d2-a531-2d950435250b`,
	name: `SIG Sauer P290`,
	sz: 1,
	dmg: 1,
	rng: 5,
	attr: [
		TwoHanded,
	],
	cap: 6,
	cal: `9mm`
});

const SpringfieldM1A = new RangedWeapon({
	id: `ea8867ac-4563-425f-b999-1195cd6f350e`,
	name: `Springfield M1A`,
	sz: 4,
	dmg: 3,
	rng: 80,
	attr: [
		TwoHanded,
		Rapid,
	],
	cap: 20,
	cal: `.308`
});

const StoegerCoachgun = new RangedWeapon({
	id: `045bf20f-49ff-4fb5-b300-6088553c066d`,
	name: `Stoeger Coach Gun`,
	sz: 3,
	dmg: 4,
	rng: 15,
	attr: [
		TwoHanded,
		Rapid,
		Scatter,
	],
	cap: 2,
	cal: `12g`
});

const SWBodyguard = new RangedWeapon({
	id: `2b58cb89-7b72-42cf-9ec0-d524e5e886a6`,
	name: `S&W Bodyguard`,
	sz: 1,
	dmg: 2,
	rng: 5,
	attr: [
		TwoHanded,
	],
	cap: 5,
	cal: `.357`
});

export { Attribute as A, BaseballBat as B, CombatGear as C, SpringfieldM1A as D, StoegerCoachgun as E, SWBodyguard as F, Glock17 as G, Hammer as H, WeaponAttr as I, Knife as K, Machete as M, Pierce as P, Rule as R, Scatter as S, Weapon as W, Ax as a, BrassKnuckles as b, Club as c, Crowbar as d, Hatchet as e, RiotShield as f, Sledgehammer as g, Spear as h, Staff as i, AR15 as j, BenelliM4 as k, BrowningABolt as l, ColtPython as m, CompoundBow as n, Crossbow as o, HenryGoldenBoy as p, HKMP5 as q, Marlin1894 as r, Mossberg500 as s, RecurveBow as t, Remington700 as u, Remington870 as v, Ruger1022 as w, RugerMkIII as x, SavageMkII as y, SIGSauerP290 as z };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
