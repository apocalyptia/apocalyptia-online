(function () {
	'use strict';

	// This file is generated by Sapper â€” do not edit it!
	const timestamp = 1604267721732;

	const files = [
		"/service-worker-index.html",
		"/404.svg",
		"/__index.html",
		"/favicon.gif",
		"/global.css",
		"/logo-192.png",
		"/logo-512.png",
		"/manifest.json",
		"/robots.txt"
	];

	const shell = [
		"/client/client.0db9a018.js",
		"/client/inject_styles.5607aec6.js",
		"/client/index.5d045541.js",
		"/client/index.878e609e.js",
		"/client/BackButton.cbb04e59.js",
		"/client/characterStore.e8cd8426.js",
		"/client/CharacterSheet.99161a62.js",
		"/client/PropertiesList.4b5b746e.js",
		"/client/Properties.db66e71c.js",
		"/client/GearList.8ed238a3.js",
		"/client/Rule.17f4bfe5.js",
		"/client/BombList.26244252.js",
		"/client/StorageList.b01a9b6a.js",
		"/client/RangedWeaponList.ab94ec99.js",
		"/client/Skills.5d261576.js",
		"/client/Capitalize.2568b2f7.js",
		"/client/EquipmentList.1de2ae48.js",
		"/client/GearBlock.8ab07977.js",
		"/client/AbilitiesList.1075e7d1.js",
		"/client/TraitsList.bd14db01.js",
		"/client/ConstitutionSkillsList.9b9e95c0.js",
		"/client/index.fc77e7c2.js",
		"/client/RandomTraits.e023ea81.js",
		"/client/AbilityGroup.83dc66d6.js",
		"/client/RandomAbilities.ab9c7406.js",
		"/client/RandomDescriptor.71ce86e1.js",
		"/client/RandomDescription.20c1295f.js",
		"/client/RandomStartingGear.455be2f9.js",
		"/client/RandomSkills.79940294.js",
		"/client/Slider.ec51b2aa.js",
		"/client/RandomRoll.7eb3c790.js",
		"/client/d6.3de191a9.js",
		"/client/description.68f4f416.js",
		"/client/properties.2eb9a3cb.js",
		"/client/abilities.63499796.js",
		"/client/skills.5592d5d1.js",
		"/client/traits.0642fad9.js",
		"/client/sheet.54f24d45.js",
		"/client/gear.92d04dda.js",
		"/client/load.807e16bd.js",
		"/client/new.557bf0f8.js",
		"/client/generator.2c803230.js",
		"/client/index.f6cb95e0.js",
		"/client/ManualRule.229d7123.js",
		"/client/[chapter].af56b8f7.js",
		"/client/index.f6993649.js",
		"/client/Spinner.18584496.js",
		"/client/index.418caf48.js",
		"/client/recover.07f7497d.js",
		"/client/sapper-dev-client.1e7a4a5e.js"
	];

	const ASSETS = `cache${timestamp}`;

	// `shell` is an array of all the files generated by the bundler,
	// `files` is an array of everything in the `static` directory
	const to_cache = shell.concat(files);
	const cached = new Set(to_cache);

	self.addEventListener('install', event => {
		event.waitUntil(
			caches
				.open(ASSETS)
				.then(cache => cache.addAll(to_cache))
				.then(() => {
					self.skipWaiting();
				})
		);
	});

	self.addEventListener('activate', event => {
		event.waitUntil(
			caches.keys().then(async keys => {
				// delete old caches
				for (const key of keys) {
					if (key !== ASSETS) await caches.delete(key);
				}

				self.clients.claim();
			})
		);
	});

	self.addEventListener('fetch', event => {
		if (event.request.method !== 'GET' || event.request.headers.has('range')) return;

		const url = new URL(event.request.url);

		// don't try to handle e.g. data: URIs
		if (!url.protocol.startsWith('http')) return;

		// ignore dev server requests
		if (url.hostname === self.location.hostname && url.port !== self.location.port) return;

		// always serve static files and bundler-generated assets from cache
		if (url.host === self.location.host && cached.has(url.pathname)) {
			event.respondWith(caches.match(event.request));
			return;
		}

		// for pages, you might want to serve a shell `service-worker-index.html` file,
		// which Sapper has generated for you. It's not right for every
		// app, but if it's right for yours then uncomment this section
		/*
		if (url.origin === self.origin && routes.find(route => route.pattern.test(url.pathname))) {
			event.respondWith(caches.match('/service-worker-index.html'));
			return;
		}
		*/

		if (event.request.cache === 'only-if-cached') return;

		// for everything else, try the network first, falling back to
		// cache if the user is offline. (If the pages never change, you
		// might prefer a cache-first approach to a network-first one.)
		event.respondWith(
			caches
				.open(`offline${timestamp}`)
				.then(async cache => {
					try {
						const response = await fetch(event.request);
						cache.put(event.request, response.clone());
						return response;
					} catch(err) {
						const response = await cache.match(event.request);
						if (response) return response;

						throw err;
					}
				})
		);
	});

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
