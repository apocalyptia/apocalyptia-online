type Character {
	id: ID!
	u: String!
	s: String!
	c: Boolean!
	d: String!
	m: String!
	n: String
	p: String!
	x: Int!
	y: Int!
	Da: Int!
	Di: String!
	Dh: String!
	De: String!
	Ds: String!
	Sk: String!
	Dw: Int!
	A: Int!
	B: Int!
	C: Int!
	D: Int!
	acr: Int!
	lar: Int!
	ran: Int!
	ste: Int!
	med: Int!
	per: Int!
	sci: Int!
	sur: Int!
	ath: Int!
	bui: Int!
	dri: Int!
	mel: Int!
	lea: Int!
	prf: Int!
	soc: Int!
	tam: Int!
	L: Int!
	P: Int!
	hD: Int!
	rA: Int!
	lA: Int!
	tO: Int!
	lL: Int!
	rL: Int!
	Ab: [Ability!]!
	Ga: [Gear!]!
	Gm: [Gear!]!
	Gr: [Gear!]!
	Go: [Gear!]!
	Ge: [Gear!]!
}

type Ability {
	i: ID!
	t: Int!
}

type Gear {
	i: ID!
	q: Int!
}


type Query {
	readCharacter(
		id: ID,
		u: String
	): Character
}

mutation CreateCharacter {
	createCharacter(
		id: ID,
		u: String
	): Character
}

mutation UpdateCharacter {
	updateCharacter(
		id: ID,
		u: String
	): Character
}

mutation DeleteCharacter {
	deleteCharacter(
		id: ID,
		u: String
	): Character
}