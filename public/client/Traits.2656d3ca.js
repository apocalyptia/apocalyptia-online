import{b as i}from"./Specialty.adf26afb.js";import{A as t,B as a,C as e}from"./ConstitutionSkills.56e093ee.js";import{R as s}from"./RandomRoll.f18d347c.js";class n extends i{constructor({id:i,name:t,desc:a,base:e=1,mods:s,score:n=1}){super({id:i,name:t,desc:a,base:e,mods:s,score:n})}}const r=new n({id:"c84ca95a-9f01-476f-897c-e6ad07231551",name:"Agility",desc:["Agility is a Character’s talent for physical coordination.","High Agility indicates balance, flexibility, and fine motor skill.","This Trait is a factor in the Speed and Dodge Properties.",`Agility is the parent Trait for the following Skills: ${t.map((i=>i.name)).join(", ")}.`]}),o=new n({id:"ac0d45e3-221c-4cf3-ab70-a19908b86bd7",name:"Brains",desc:["Brains is a Character’s talent for cognitive performance and abstract thought.","High Brains indicates sharp memory, keen awareness, and studiousness.","This Trait is a factor in the Experience and Intellect Properties.",`Brains is the parent Trait for the following Skills: ${a.map((i=>i.name)).join(", ")}.`]}),c=new n({id:"da48b9f5-de7d-44b3-bb24-392e69bebe90",name:"Constitution",desc:["Constitution is a Character’s talent for physical power and durability.","High Constitution indicates good health, high stamina, and strong muscles.","This Trait is a factor in the Health and Block Properties.",`Constitution is the parent Trait for the following Skills: ${e.map((i=>i.name)).join(", ")}.`]}),l=new n({id:"2f73a727-6149-482e-9c36-70cccbfd03d4",name:"Demeanor",desc:["Demeanor is a Character’s talent for social exchanges and sheer force of will.","High Demeanor indicates charisma, self-motivation, and confidence.","This Trait is a factor in the Psyche and Luck Properties.",`Demeanor is the parent Trait for the following Skills: ${e.map((i=>i.name)).join(", ")}.`]});var d={name:"Traits",explanation:["You get 14 Trait points to assign.","Traits range from 1 to 6.","Trait rolls are [d6 + Trait].","Trait scores set the limit for their Skills."],list:[r,o,c,l],max:6,startingPoints:()=>14,assign:function(i,t){return i.traits[t.name].score=parseInt(t.value),this.limit(i,t.name)},limit:function(i,t){for(;this.remaining(i)<0;)i.traits[t].score--;return i},random:function(i){for(i=this.reset(i);this.remaining(i)>0;){const t=s(Object.keys(i.traits));i.traits[t].score<this.max&&i.traits[t].score++}return i},remaining:function(i){const t=Object.values(i.traits).reduce(((i,{score:t})=>i+t),0);return this.startingPoints()-t},reset:function(i){return Object.keys(i.traits).forEach((t=>i.traits[t].score=1)),i}};export{r as A,o as B,c as C,l as D,d as T};
