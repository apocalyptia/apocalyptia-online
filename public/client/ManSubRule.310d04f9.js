import{S as e,i as a,s as t,e as n,t as o,c as s,a as i,k as r,d as l,b as c,f as d,m as h,p as f,j as u,l as m,P as p,n as g,G as b,Y as y}from"./client.f5ad92d3.js";import{R as w}from"./SWBodyguard.54177d3a.js";import{A as v,a as k,b as D,B as A}from"./BombList.4927c2b7.js";import{D as S,a as R,E as P,M as x,b as T,S as C}from"./StorageList.71288974.js";import{X as M,a as B,b as E,c as I,d as j,e as G,f as O,g as Y,A as H,h as F,M as L,R as W}from"./AppendToGUUID.176d1458.js";import{P as U,D as N}from"./Skills.35c4252b.js";import{A as q,B as z,C as $}from"./ConstitutionSkills.56e093ee.js";import{R as V}from"./RandomRoll.f18d347c.js";import{A as X,B as J,C as K,D as Q}from"./Traits.2656d3ca.js";import{M as Z,A as _,B as ee,C as ae,D as te,E as ne,H as oe,I as se,L as ie,P as re,S as le}from"./Speed.66ad8113.js";const ce=[...M,...B,...E,...I,...j,...G,...O,...Y],de=e=>{const a=[];for(let t=0;t<e.length;++t)if(e[t].opts[0])for(let n=0;n<e[t].opts.length;++n){let o=H(e[t].id,e[t].opts[n].name);const s=new F({id:o,name:e[t].name,desc:e[t].desc,max:e[t].max,xp:e[t].xp,taken:e[t].taken,opts:[e[t].opts[n]],selection:n});a.push(s)}else{const n=new F({id:e[t].id,name:e[t].name,desc:e[t].desc,max:e[t].max,xp:e[t].xp,taken:e[t].taken});a.push(n)}return a},he={name:"Abilities",explanation:["Abilities are Character upgrades purchased with XP."],groups:[{name:3,visible:!1,list:M},{name:6,visible:!1,list:B},{name:9,visible:!1,list:E},{name:12,visible:!1,list:I},{name:15,visible:!1,list:j},{name:18,visible:!1,list:G},{name:24,visible:!1,list:O},{name:30,visible:!1,list:Y}],list:ce.sort(((e,a)=>U(e,a,"name"))),masterList:de(ce).sort(((e,a)=>U(e,a,"name"))),remainingXP:e=>(e.abilities.length&&(e.props.experience.spent=e.abilities.reduce(((e,a)=>e+a.taken*a.xp),0)),e.props.experience.remaining=e.props.experience.score-e.props.experience.spent,e),random:function(e){for(e=this.reset(e);e.props.experience.remaining>0;){const a=this.masterList.filter((a=>a.xp<=e.props.experience.remaining&&!e.abilities.includes(a)));if(!a.length)break;{const t=V(a);t.taken++,e.abilities.push(t),e.props.experience.remaining-=t.xp}}return e},reset:function(e){for(let a=0;a<e.abilities.length;++a)e.abilities[a].taken=0;return e.abilities=[],e}},fe=(de(he),new w({id:"43080069-4044-4882-0b54-ca9229f09f23",name:"Rounds",desc:["Combat time occurs in 3-second “rounds”.","Players have 30 seconds to decide what their Character's Actions will be for the round.","Any new Complication or Status modifiers that come into play during a round go into effect at the start of the next round."]})),ue=new w({id:"6073380c-7def-4d74-889b-ddbd5865fe69",name:"Actions",desc:["You get 3 Actions per round starting on your turn.","Most things cost 1 Action unless otherwise noted."]}),me=new w({id:"2bd8d14c-6965-4319-c64b-1ebe590b93ac",name:"Communication",desc:["You can speak or shout up to 6 words per round."]}),pe=new w({id:"aa44bbe5-d0e1-4bed-0125-19a3c88c587a",name:"Chase",desc:["When a combatant attempts to flee and another chooses to pursue, they roll opposed [(Acrobatics, Athletics, Drive, or Tame) + Run Speed] each round, depending on the type of mobility in use.","The chase ends when one side gets 3 Successes over the other."]}),ge=new w({id:"66094467-f795-4c02-49e9-0bf193dacaa6",name:"Movement",desc:["You may make one Movement Action per turn.","This Movement always costs 1 Action, no matter what type of Movement it is.","Your Movement Action may be any one of the following:"," 1) Walk Speed = [Agility x 3] yards"," 2) Run Speed = [Agility x 6] yards"," 3) Climb Speed = [Agility] yards"," 4) Swim Speed = [Agility / 2] yards"," 5) Stand up from Prone = 1 yard","When you take a Movement Action, you may go Prone at any time for free.","Running imposes the Unstable Status effect until your next turn.","You may divide up your Movement around other Actions on your turn however you wish."]});ge.subrules=[pe];const be=new w({id:"d253e0e1-36bf-4434-a78b-032196be0e73",name:"Attack",desc:["There are two types of Attacks: Melee and Ranged.","Spend an Action on your turn to roll [d6 + Melee or Ranged] vs Defense.","Rolling a 6 on the die is an Explosion, which is re-rolled and added cumulatively to the Attack total.","On a Successful Attack, in addition to the Weapon Damage, you do bonus Damage = [Attack - Defense] up to your attacking Skill score."]}),ye=new w({id:"feae7482-800b-47d1-f17c-3a103d83b70b",name:"Reflexive Defense",desc:["Reflexive Defenses = the Skill Specialty they are based on.","These are your default Defenses when not actively rolling.","Use Reflexive Block against Melee Attacks.","Use Reflexive Dodge against either Melee or Ranged Attacks."]}),we=new w({id:"69987b3f-518a-4f96-643c-c82cbd1c1a98",name:"Defense",desc:["Spend an Action on your enemy's turn to use either type of Defense: Block or Dodge.","To Block, roll [d6 + Melee] vs Melee Attacks.","To Dodge, roll [d6 + Acrobatics] vs either Melee or Ranged Attacks.","Botching a Defense roll makes you fall Prone."]});we.subrules=[ye];const ve=new w({id:"c5d2503f-cc78-45c6-3b23-02f4f37d54b9",name:"Damage Resistance",desc:["Armor's Damage Resistance reduces the Damage inflicted by any individual Attack on that Body Part.","Reduce a piece of Armor's Damage Resistance by 1 after taking Damage that exceeds its Damage Resistance."]}),ke=new w({id:"0de26712-9508-40af-262e-b368e9550fa1",name:"Fire Damage",desc:["Each round you take Fire Damage, 1 point is permanent and never heals.","Only Fire-Resistant Armor reduces Fire Damage."]}),De=new w({id:"bff6e8fd-de70-4ad6-dd4b-b852400ab3ca",name:"Pain",desc:["Damage (and a few other effects) cause Pain penalties.","Each point of Pain is a -1 penalty to all rolls and Speed.","Pain fades away as Damage heal.","You fall Prone if your Speed drops to 0 from Pain."]}),Ae=new w({id:"a61981e8-36cb-466e-7b3a-0173b19a4c06",name:"Recovery",desc:["After 3 days of rest, you have a chance to recover a little bit, both physically and mentally.","Roll [Constitution vs total Damage] to heal 1 Health on a random Damaged Body Part.","Roll [Demeanor vs total Trauma] to heal 1 Trauma.","On a Fail, you take 1 additional Damage or Trauma, depending on what you were rolling to Recover."]}),Se=new w({id:"8fbad46e-af91-424a-28c5-2e8b7ff802bd",name:"Damage",desc:["Damage temporarily reduces Health.","When Head or Torso Health drops to 0, you fall unconscious","When an Arm or a Leg's Health drops to 0, you lose the use of that limb.","Consciousness and limb functionality are restored once you have healed to at least 1 Health on that Body Part.","You die when Head or Torso Health drops to the negative of their scores.","You lose the limb when Arm or Leg Health drops to the negative of their scores.","Successful Attacks do Damage = [(Attack - Defense) + Weapon Damage].","Each point of Damage cause a -1 Pain penalty until healed."]});Se.subrules=[ve,ke,De,Ae];var Re={name:"Combat",list:[fe,ue,me,ge,be,we,Se]};class Pe{constructor({name:e="",headers:a=[],contents:t=[],widths:n=[]}){this.name=e,this.headers=a,this.contents=t,this.widths=n}}const xe=new w({id:"9fd0a556-f4c0-4aba-6814-c371f0a8ead0",name:"Cover",desc:["All Damage is negated against targets that are behind Cover unless the weapon's base Damage exceeds the Material Damage Resistance.","If the weapon's base Damage is greater than the Material's Damage Resistance, then the Material Damage Resistance acts as Damage Reduction.","All standard types of Cover except Glass make you Concealed while behind Cover.","You can lean in and out of Cover to Attack as part of an Action.","Doing so opens you up to a Called Shot against an exposed Body Part if an opponent is waiting for you to lean out of Cover."]});class Te{constructor({material:e,dr:a}){this.material=e,this.dr=a}}xe.table=new Pe({name:"Cover Table",headers:["Material","Damage Resistance"],contents:[new Te({material:"Drywall",dr:1}),new Te({material:"Glass",dr:1}),new Te({material:"Plywood",dr:1}),new Te({material:"Hardwood",dr:2}),new Te({material:"Sheet Metal",dr:2}),new Te({material:"Brick",dr:3}),new Te({material:"Concrete",dr:4}),new Te({material:"Steel",dr:5})],widths:[50,50]});var Ce={name:"Complications",list:[xe,new w({id:"63808ef6-3fc3-411c-54c9-edcc41ba8a7b",name:"Friendly Fire",desc:["-3 Ranged against targets within 1yd of your ally.","If the Ranged Attack Fails, re-roll the Ranged Attack vs the ally’s Reflexive Dodge."]}),new w({id:"3bca9734-b437-424e-a1e0-16b4a012af50",name:"Range",desc:["Ranged Attacks take a -1 penalty per additional Range increment.","Maximum Range is 10 Range increments.","Melee Attacks take a modifier against Melee weapons that have a different Range = [your weapon’s Range - enemy weapon’s Range]."]}),new w({id:"1ce64fb7-256c-4f7c-1750-81ded2f514e4",name:"Visibility",desc:["-1 to -6 to all rolls involving seeing, including Attack and Defense.","A Visibility penalty of -6 imposes the effect of being temporarily Blind."]})]};const Me=new w({id:"cacf928a-d180-4428-c809-233b8776473e",name:"Difficulty",desc:["The Result of your roll must be greater than or equal to the Difficulty number to be a Success.","If the roll is opposed, re-roll ties.","Difficulties are indicated by the # symbol.","The Narrator or an opposing roll sets the # for your rolls.","3# = Trivial","6# = Routine","9# = Challenging","12# = Really Hard","15# = Very Unlikely","18# = Nearly Impossible"]}),Be=new w({id:"d54e8b0e-8f14-4426-a34e-8c889fe15413",name:"Cooperation",desc:["If Characters want to help each other perform a task, one of them makes the roll and the rest add their Scores together as a Modifier to the main Character’s Result.","The Narrator should use their judgement to determine the time to completion."]}),Ee=new w({id:"b1362980-b2b2-4c4f-870d-d7b2aeda8b47",name:"Rote Actions",desc:["If the roll is unopposed and your [(Score + Modifiers) >= #] before the roll and you can take your time, you Succeed automatically."]}),Ie=new w({id:"2fdf085b-6ec7-4b82-7442-9ecf516664aa",name:"Success",desc:["Your roll is a Success when if the Result is greater than or equal to the Difficulty.","Re-roll ties on opposed rolls.","The degree of Success (the amount by which the Result exceeded the Difficulty) is important for some rolls, such as Attacks."]});Ie.subrules=[Ee,Be];var je={name:"Core",explanation:["To attempt a difficult action, roll one six-sided die (“d6”) to see how well your efforts worked out for you.","Your Character’s score in a relevant Trait or Skill is added to the d6 roll to improve your chances of succeeding.","There are many other modifiers that may add or subtract from your result.","Modifiers are applied by the Narrator.","The formula for a roll is shown in [brackets].","Calculate the Result of a d6 roll as follows:","[d6 Roll + Score ± Modifiers] = Result"],list:[Me,Ie,new w({id:"4e7f6142-a2d0-43ac-cdd9-c1d3147dac69",name:"Fail",desc:["Your roll is a Fail when the Result is less than the Difficulty."]}),new w({id:"6da8a818-56c8-417a-2c98-c2f9bbde7aa5",name:"Explode",desc:["An Exploding die offers the possibility of doing extraordinarily well at a Trait, Skill, or Property roll.","If a 6 is rolled, roll it again and keep rolling as long as the die continues to roll a 6.","When the die finally stops Exploding, add all of these rolls together, then add scores and modifiers as usual to get your Result."]}),new w({id:"9d933f25-f236-4674-7c40-d34764f96f72",name:"Botch",desc:["A Botch is when you have failed very very badly at a Trait, Skill, or Property roll.","If you roll 1 on a die and that die is not Exploding, re-roll to check for a Botch.","If a 1 is rolled again, you Botch.","If any other number is rolled, your d6 roll is counted as a normal 1.","The Narrator has a great deal of latitude to be creative when determining the effects of Botching under various circumstances, but they should always be fair.","Whenever a Character Botches, they get +1 XP because we learn the most from our greatest failures."]})]};const Ge={name:"Gear",list:[...v,...k,...D,...A,...S,...R,...P,...x,...T,...L,...W,...C].sort(((e,a)=>U(e,a,"name"))),categories:["melee","ranged","ammo","armor","equipment"]};class Oe extends w{constructor({id:e,name:a,desc:t,formula:n,cat:o}){super({id:e,name:a,desc:t,formula:n}),this.cat=o}}const Ye=[new Oe({id:"af99f6bc-7db2-41ec-b35e-e709bd29d8a1",cat:"Defensive",name:Z.specs.block.name,desc:Z.specs.block.desc}),new Oe({id:"dcc3220d-72cd-46b2-991d-a6568f5ccdf9",cat:"Defensive",name:_.specs.dodge.name,desc:_.specs.dodge.desc}),new Oe({id:"cac81a46-c688-4b29-a680-502f827987ed",cat:"Defensive",name:"Duck",desc:["You may roll [Dodge vs Attack] to move up to your Speed to get behind Cover.","This is the only way to Dodge a Ranged(Shoot) Attack.","As part of this Dodge, you may elect to go Prone.","If the Attack still hits, the Cover Material’s Damage Resistance reduces the Damage.","You will keep the benefits of Cover as long as it remains between you and the opponent."]}),new Oe({id:"f334f2c5-cc52-4296-b22d-d978f07944d4",cat:"Defensive",name:"Hide",desc:["Roll [Stealth vs Perception] to be Concealed.","Your Speed is 0.","+3 Stealth if Prone."]}),new Oe({id:"a484d274-5d64-46a8-99be-08dda62e541a",cat:"Defensive",name:"Protect",desc:["You become the new target of all Attacks targeting someone you choose within 1yd of you for 1 round.","This does not take an Action to declare, but any Defense rolls you make take Actions as usual."]}),new Oe({id:"30425d94-d8b5-452f-a884-b145f4f4533b",cat:"Defensive",name:"Sneak",desc:["Roll [Stealth vs Perception] to move Concealed at [Speed / 2]."]})],He=new Oe({id:"b203ca75-1dd4-4700-ac94-b2a02bf2988b",cat:"Offensive",name:"Aim",desc:["Spend an Action to get +3 to your next Attack against a specific target."]}),Fe=new Oe({id:"7b5ac4ec-c58a-48bd-aaed-c0fbf6716874",cat:"Offensive",name:"Called Shot",desc:["Attacks target the Torso by default.","A Called Shot is an Attack targeting the Head, Arms, or Legs with added effects depending on the Body Part."]});class Le{constructor({roll:e,name:a,penalty:t,effect:n}){this.roll=e,this.name=a,this.penalty=t,this.effect=n}}Fe.table=new Pe({name:"Called Shot Table",headers:["d6","Part","Penalty","Effect"],contents:[new Le({roll:6,name:"Head",penalty:-3,health:"Constitution",effect:"Stun 1 round"}),new Le({roll:5,name:"R Arm",penalty:-1,effect:"Drop item"}),new Le({roll:4,name:"L Arm",penalty:-1,effect:"Drop item"}),new Le({roll:3,name:"Torso",penalty:0,effect:"None"}),new Le({roll:2,name:"L Leg",penalty:-1,effect:"Fall Prone"}),new Le({roll:1,name:"R Leg",penalty:-1,effect:"Fall Prone"})],widths:[5,15,20,50]});const We=new Oe({id:"b4812d24-3b7e-43aa-a2d6-7b734520c5e7",cat:"Offensive",name:"Disarm",desc:["Roll [Melee vs Melee (+ Constitution if the weapon is used two-handed)].","The weapon flies d6 yds away in a random direction or the Attacker may choose to grab the weapon if they are Unarmed."]}),Ue=new Oe({id:"3b68967f-c8c2-42b1-929f-3796cf7d1cf7",cat:"Offensive",name:"Grab",desc:["Roll [Melee(Unarmed) vs DEF] to impose the 'Grabbed' Status."]}),Ne=new Oe({id:"43e2df6c-320a-404a-9381-52b6a441df44",cat:"Offensive",name:"Hostage",desc:["Use a Grabbed or Restrained enemy as Cover.","The Grappled enemy's Damage Resistance acts as the Material Damage Resistance and any excess Damage is applied to the Grappled enemy instead of you.","If the Damage is enough to kill the Grappled enemy, any excess Damage passes through to you.","This does not make you Concealed."]}),qe=new Oe({id:"cbc7ab2c-3122-4ab9-b990-c7296e7c66ef",cat:"Offensive",name:"Tackle",desc:["Spend 2 Actions and make a Grapple Attack roll to move up to your Speed and Pin an enemy.","If you Fail, you go Prone in front of them."]}),ze=new Oe({id:"cd4abf3b-f40f-401e-8824-9a10cce729c9",cat:"Offensive",name:"Throw",desc:["Throw a Grabbed or Restrained enemy up to [Constitution] yds.","The target takes 1 point of Blunt Damage to a random Body Part and land Prone."]}),$e=new Oe({id:"974d2b5c-67e0-4e5d-8dd8-883d98a5926e",cat:"Offensive",name:"Grapple",desc:["There are three steps to Grappling:","1) Grab","2) Restrain","3) Pin","To Grapple an opponent, you must have at least one free hand and make a Melee(Unarmed) Attack roll, which does no Damage.","With a Successful Grapple roll, that combatant may alter the current Grapple step by 1.","With each new Grapple roll, the difference between the combatants' results is a modifier to the Attacker's next Grapple roll.","Each round the Attacker must choose to either spend 1 Action just to retain the Grapple, make another Grapple roll, or let go.","When the Defender reduces the Grapple step to 0 they escape."]});$e.subrules=[Ue,Ne,qe,ze];var Ve={name:"Maneuvers",list:[...Ye,...[He,Fe,We,$e,new Oe({id:"76fb1603-4c1d-4b07-a128-c73927f2f036",cat:"Offensive",name:"Non-Lethal Force",desc:["Declare that you are using this Maneuver before rolling a Melee Attack.","On a Success, you do half Damage."]}),new Oe({id:"d12992e8-2616-45ad-b909-e8315de8d0a9",cat:"Offensive",name:"Push",desc:["Roll [Constitution vs Constitution] to push an enemy in front of you.","While Pushing, your Speed is equal to the lesser of your normal Speed or your Constitution. No Damage."]}),new Oe({id:"a5e75193-65f5-45ac-92a2-3efac4ab264e",cat:"Offensive",name:"Reload",desc:["Replace a magazine or a single piece of ammunition (depending on the weapon) in a Ranged weapon."]}),new Oe({id:"0c791227-b8d2-42a6-b5c1-b2aedcab0aad",cat:"Offensive",name:"Shove",desc:["Roll [Melee vs Constitution] to shove an enemy up to [Constitution / 2] yds away from you, knocking them Prone. No Damage."]}),new Oe({id:"0f4236ef-ce76-4942-bbb0-f0f6ca5e840e",cat:"Offensive",name:"Trip",desc:["Roll [Melee vs Agility] to knock an enemy Prone. 1 Damage."]})],...[new Oe({id:"6fe1552c-4cb6-416f-8691-0cfc0ac39af5",cat:"Social",name:"Distract",desc:["Roll [Perform vs Perception].","Stun target for 1 round."]}),new Oe({id:"46b57ab5-e31d-4d60-902b-b9f56d95168d",cat:"Social",name:"Encourage",desc:["Roll [Leadership vs groups’ total Demeanor scores].","The group gets a bonus = [your Demeanor] for one specific roll each.","A Botch is -1 to all rolls."]}),new Oe({id:"28849e94-5c31-4b49-a84b-63a1b8cec363",cat:"Social",name:"Interrogate",desc:["Roll [Leadership vs Demeanor] to get information out of a subject who does not want to help, but without resorting to violence.","Each roll takes d6 mins of conversation.","If the interrogator Succeeds, the subject gives up a fact (wittingly or unwittingly).","If the subject Succeeds, they become hardened against further questioning, imposing a -1 penalty on subsequent attempts.","After Fails = [Demeanor], the interrogator gives up or the subject cracks and tells everything they know."]}),new Oe({id:"5d88546a-77df-402d-a9b5-bcab8a62fa6c",cat:"Social",name:"Negotiate",desc:["If opposed parties are willing to talk out their differences, each side start with a list of demands.","Roll [Socialize vs Socialize] once per demand.","Attitude and situational modifiers should be applied by the Narrator.","Success means you get your demand and the opposed negotiator concedes.","Either side can choose to concede a demand without rolling. Some desires may be non-negotiable."]}),new Oe({id:"9599dc01-9940-44d8-ae36-e4623810fe5d",cat:"Social",name:"Recruit",desc:["Roll [Socialize vs Demeanor] to convince someone to join your side.","If they are someone’s follower, roll [Leadership vs Leadership].","Attitude and other contextual modifiers should be applied at the Narrator's discretion."]}),new Oe({id:"a00cbcf0-3593-493b-9fd8-575846d182bb",cat:"Social",name:"Taunt",desc:["Roll [Leadership vs Demeanor].","Provoke the enemy into exclusively attacking you.","The degree of Success is a penalty to the loser’s next roll.","The enemy is Stunned for 1 round if [penalty > enemy’s Demeanor]."]}),new Oe({id:"9da029d0-9c58-4407-812c-396fb59c764b",cat:"Social",name:"Torture",desc:["Roll [Medicine vs prisoner’s Constitution] once per hour to cause a captive d6 Pain to soften their resolve without killing them.","Failure does d6 Damage to the captive.","Roll [Demeanor vs Demeanor] at the end of each hour (Pain penalty applies).","Failure causes -1 Psyche loss.","At 0 Psyche, either the torturer cannot do it anymore and gives up, or the captive is broken and can be controlled with Demeanor Skills automatically until freed."]})]]};var Xe={name:"Needs",explanation:["Take 1 Pain for each unmet requirement over a given period of time."],list:[new w({id:"b3c3fa84-e24d-4112-82ff-7c346a207e47",name:"Asphyxiation",desc:["Constant air supply is required.","1 Pain per minute without air.","This penalty is reduced by 1 per minute with air.","Going without air for a number of minutes = [Constitution] is lethal."]}),new w({id:"34974574-6455-4c07-8456-8f7bdc78ec9b",name:"Dehydration",desc:["1 Water per day is required.","1 Pain per day without Water.","This penalty is reduced by 1 per day with Water.","Going without Water for a number of days = [Constitution] is lethal."]}),new w({id:"0494a41e-f8f8-45f5-a1ef-5660900e37db",name:"Exhaustion",desc:["8 hours of sleep per day is required.","1 Pain per day without sufficient sleep.","Go unconscious for 8 hours after days = [Constitution] without sleep.","Penalties go away after 8 hours of sleep."]}),new w({id:"1625c80c-5630-4f20-b909-ed91dbce371b",name:"Hypothermia",desc:["Warmth is required.","1 Pain per hour of Hypothermia.","Reduce penalty by 1 per hour of warmth.","Hypothermia for hours = [Constitution] is lethal."]}),new w({id:"93f70ef3-b00f-4e52-9e11-5225262b27e4",name:"Starvation",desc:["1 Food per day is required.","1 Pain per week without Food.","This penalty is reduced by 1 per day with Food.","Going without Food for a number of weeks = [Constitution] is lethal."]})]},Je={name:"Properties",explanation:["Properties represent a variety of attributes that are derived from a Character's Traits and Skills."],list:[ee,ae,te,ne,oe,se,ie,re,le],setScores:function(e){return this.list.forEach((a=>a.formula(e))),e}};const Ke=[...q,...z,...$,...N];var Qe={name:"Skills",explanation:["You get Brains x 6 Skill points to assign.","Skills range from 0 to 6.","Skill rolls are [d6 + Skill].","Trait scores set the limit for their Skills."],list:Ke,groups:[{name:"Agility",list:q},{name:"Brains",list:z},{name:"Constitution",list:$},{name:"Demeanor",list:N}],specs:Object.values(Ke).map((e=>Object.values(e.specs))).reduce(((e,a)=>e.concat(a)),[]).sort(((e,a)=>U(e,a,"name"))),startingPoints:e=>6*e.traits.brains.score,assign:function(e,a){return e.skills[a.name].score=parseInt(a.value),this.limit(e,a.name)},limit:function(e,a){const t=e.traits[e.skills[a].parent.toLowerCase()].score;for(;this.remaining(e)<0||e.skills[a].score>t;)e.skills[a].score--;return e},random:function(e){for(e=this.reset(e);this.remaining(e)>0;){const a=V(Object.keys(e.skills)),t=e.traits[e.skills[a].parent.toLowerCase()].score;e.skills[a].score<t&&e.skills[a].score++}return e},remaining:function(e){const a=Object.values(e.skills).reduce(((e,{score:a})=>e+a),0);return this.startingPoints(e)-a},reset:function(e){return Object.keys(e.skills).forEach((a=>e.skills[a].score=0)),e}};const Ze=new w({id:"1a2a047c-128c-4136-ad65-0afd81c9362d",name:"Bleeding",desc:["You begin Bleeding whenever you take Damage that isn't Blunt.","Bleeding Damage is dealt to the Torso, regardless of which Body Part took the initial Damage.","If your Torso has positive Health, the rate of Bleeding is 1 Damage per minute.","If any Body Part drops to 0 or negative Health, the rate of Bleeding is 1 Damage per round.","A Bleeding person with positive Torso Health can roll Constitution vs total Damage once per minute to stop Bleeding on their own, otherwise the Medicine Skill is required."]}),_e=new w({id:"5fb3123f-b7f0-4e09-acfb-10ed93b675a8",name:"Blind",desc:["You are considered to be Defenseless.","You automatically Fail any Perception roll that involves seeing.","You have a -6 penalty to all other rolls that involve seeing.","This includes Attacks, in which case all opponents are considered to be Concealed from you."]}),ea=new w({id:"fdd9257e-9937-4786-a6b0-eb77c39ba7f4",name:"Burning",desc:["1 Fire Damage per round.","It takes a d6 rounds to stop, drop Prone, and roll Survival 6# to put out the flames."]}),aa=new w({id:"56037ac2-9ad0-4097-9cef-621ea8d171e7",name:"Concealed",desc:["If an opponent cannot see you, they are considered to be Blind to you.","Any Attack they make targeting you is at a -6 penalty.","Blasts are unaffected by this penalty, though Blast Damage may be negated or reduced if the Concealment is due to Cover.","Targets are Defenseless against Attacks from Concealed opponents."]}),ta=new w({id:"0a8842eb-6a28-4216-853b-11d6930a9edc",name:"Deaf",desc:["You automatically Fail any roll that involves hearing."]}),na=new w({id:"62f3017d-c64a-4647-aed4-da944bf52449",name:"Defenseless",desc:["You must use a Reflexive Defense.","Use your Block score against Melee Attacks and you Dodge score against Ranged Attacks."]}),oa=new w({id:"064cb25d-caff-4c33-944a-849604861561",name:"Falling",desc:["1 Blunt Damage per 2yds.","Each point of Falling Damage is inflicted on a random Body Part.","Roll [Acrobatics # = yds] as a Defense Action to halve Falling Damage."]}),sa=new w({id:"fcf2148a-1825-4962-8e88-866e9fbdced4",name:"Grabbed",desc:["A Grabbed opponent is considered to be Immobilized."]}),ia=new w({id:"25b1eaa6-4cfb-46c1-9d69-142209a7a3b0",name:"Harmless",desc:["You cannot Attack."]}),ra=new w({id:"2e7634cc-4b65-483d-8011-b12d6bee9bd5",name:"Immobilized",desc:["Your Speed is temporarily considered to be 0."]}),la=new w({id:"c3aba659-dd96-4f42-8281-0d13b9c6de2e",name:"Off-Hand",desc:["-3 penalty to Attack with your Off-Hand."]}),ca=new w({id:"d2e8c636-d853-4fa2-a0dd-2dad409ba5fc",name:"Pinned",desc:["Pinned is the third and final step of Grappling.","While Pinned, you are considered to be Defenseless, Harmless, Immobilized, and Prone.","The Attacker is also considered to be Immobilized and Prone."]}),da=new w({id:"687fbf28-8198-4363-bea5-61d56f878c23",name:"Prone",desc:["You may drop Prone at any time for free on your turn or as part of a Dodge action.","Standing up takes 1 Action.","The benefits of being Prone are that you get +3 Ranged and +3 Stealth, and attackers take a -3 Ranged penalty to hit you.","The drawbacks of being Prone are that your Speed drops to 1yrd and attackers get a +3 Melee bonus to hit you."]}),ha=new w({id:"a836f410-b9ef-4b32-a753-8b732b8e4b11",name:"Restrained",desc:["Restrained is the second step of Grappling.","While Restrained, you are considered to be Harmless and Immobilized."]}),fa=new w({id:"ba6cf397-b434-442f-a725-73ee00cf23ca",name:"Stun",desc:["Defenseless, Harmless, and Immobilized.","You fall Prone if Stunned for longer than 1 round."]}),ua=new w({id:"f37ac524-e26b-49b0-a3e7-5d01a50c5693",name:"Unarmed",desc:["Successful Unarmed Attacks do Damage = [(Attack - Defense) / 2] (always round down).","Damage Resistance is not depleted."]}),ma=new w({id:"0f336152-640e-40b9-bd40-5a717ba9b61c",name:"Unconscious",desc:["Unaware and unable to do anything.","You are considered to be Blind, Harmless, Immobilized, Prone, and have a Reflexive Defense of 0."]}),pa=new w({id:"c1da7d28-31a8-468c-a454-157fe3addb62",name:"Unstable",desc:["-3 penalty to Agility or Constitution Skill rolls.","Ranged Attacks targeting you take a -3 penalty."]});const ga=[he,Re,Ce,je,Ge,Ve,Xe,Je,Qe,{name:"Status",list:[Ze,_e,ea,aa,ta,na,oa,sa,ia,ra,la,ca,da,ha,fa,ua,ma,pa]},{name:"Traits",explanation:["You get 14 Trait points to assign.","Traits range from 1 to 6.","Trait rolls are [d6 + Trait].","Trait scores set the limit for their Skills."],list:[X,J,K,Q],max:6,startingPoints:()=>14,assign:function(e,a){return e.traits[a.name].score=parseInt(a.value),this.limit(e,a.name)},limit:function(e,a){for(;this.remaining(e)<0;)e.traits[a].score--;return e},random:function(e){for(e=this.reset(e);this.remaining(e)>0;){const a=V(Object.keys(e.traits));e.traits[a].score<this.max&&e.traits[a].score++}return e},remaining:function(e){const a=Object.values(e.traits).reduce(((e,{score:a})=>e+a),0);return this.startingPoints()-a},reset:function(e){return Object.keys(e.traits).forEach((a=>e.traits[a].score=1)),e}}];function ba(e,a,t){const n=e.slice();return n[1]=a[t],n}function ya(e){let a,t,u=e[1]+"";return{c(){a=n("p"),t=o(u),this.h()},l(e){a=s(e,"P",{class:!0});var n=i(a);t=r(n,u),n.forEach(l),this.h()},h(){c(a,"class","rule-desc svelte-19eaj49")},m(e,n){d(e,a,n),h(a,t)},p(e,a){1&a&&u!==(u=e[1]+"")&&f(t,u)},d(e){e&&l(a)}}}function wa(e){let a,t,p,g,b,y,w,v,k,D,A,S=e[0].max+"",R=e[0].xp+"";return{c(){a=n("p"),t=n("span"),p=o("Max:"),g=u(),b=o(S),y=u(),w=n("p"),v=n("span"),k=o("XP:"),D=u(),A=o(R),this.h()},l(e){a=s(e,"P",{});var n=i(a);t=s(n,"SPAN",{class:!0});var o=i(t);p=r(o,"Max:"),o.forEach(l),g=m(n),b=r(n,S),n.forEach(l),y=m(e),w=s(e,"P",{});var c=i(w);v=s(c,"SPAN",{class:!0});var d=i(v);k=r(d,"XP:"),d.forEach(l),D=m(c),A=r(c,R),c.forEach(l),this.h()},h(){c(t,"class","bold svelte-19eaj49"),c(v,"class","bold svelte-19eaj49")},m(e,n){d(e,a,n),h(a,t),h(t,p),h(a,g),h(a,b),d(e,y,n),d(e,w,n),h(w,v),h(v,k),h(w,D),h(w,A)},p(e,a){1&a&&S!==(S=e[0].max+"")&&f(b,S),1&a&&R!==(R=e[0].xp+"")&&f(A,R)},d(e){e&&l(a),e&&l(y),e&&l(w)}}}function va(e){let a,t,o,r=e[0].desc,h=[];for(let a=0;a<r.length;a+=1)h[a]=ya(ba(e,r,a));let f=e[0]instanceof F&&wa(e);return{c(){a=n("div");for(let e=0;e<h.length;e+=1)h[e].c();t=u(),f&&f.c(),o=p(),this.h()},l(e){a=s(e,"DIV",{class:!0});var n=i(a);for(let e=0;e<h.length;e+=1)h[e].l(n);n.forEach(l),t=m(e),f&&f.l(e),o=p(),this.h()},h(){c(a,"class","desc-section")},m(e,n){d(e,a,n);for(let e=0;e<h.length;e+=1)h[e].m(a,null);d(e,t,n),f&&f.m(e,n),d(e,o,n)},p(e,[t]){if(1&t){let n;for(r=e[0].desc,n=0;n<r.length;n+=1){const o=ba(e,r,n);h[n]?h[n].p(o,t):(h[n]=ya(o),h[n].c(),h[n].m(a,null))}for(;n<h.length;n+=1)h[n].d(1);h.length=r.length}e[0]instanceof F?f?f.p(e,t):(f=wa(e),f.c(),f.m(o.parentNode,o)):f&&(f.d(1),f=null)},i:g,o:g,d(e){e&&l(a),b(h,e),e&&l(t),f&&f.d(e),e&&l(o)}}}function ka(e,a,t){let{rule:n}=a;return e.$$set=e=>{"rule"in e&&t(0,n=e.rule)},[n]}class Da extends e{constructor(e){super(),a(this,e,ka,va,t,{rule:0})}}function Aa(e,a,t){const n=e.slice();return n[4]=a[t],n}function Sa(e,a,t){const n=e.slice();return n[1]=a[t],n}function Ra(e){let a,t,u=e[4]+"";return{c(){a=n("p"),t=o(u),this.h()},l(e){a=s(e,"P",{class:!0});var n=i(a);t=r(n,u),n.forEach(l),this.h()},h(){c(a,"class","spec-desc svelte-14xk3cs")},m(e,n){d(e,a,n),h(a,t)},p(e,a){1&a&&u!==(u=e[4]+"")&&f(t,u)},d(e){e&&l(a)}}}function Pa(e){let a,t,p,g,y,w=e[1].name+"",v=e[1].desc,k=[];for(let a=0;a<v.length;a+=1)k[a]=Ra(Aa(e,v,a));return{c(){a=n("li"),t=n("div"),p=o(w),g=u();for(let e=0;e<k.length;e+=1)k[e].c();y=u(),this.h()},l(e){a=s(e,"LI",{});var n=i(a);t=s(n,"DIV",{class:!0});var o=i(t);p=r(o,w),o.forEach(l),g=m(n);for(let e=0;e<k.length;e+=1)k[e].l(n);y=m(n),n.forEach(l),this.h()},h(){c(t,"class","sub-name")},m(e,n){d(e,a,n),h(a,t),h(t,p),h(a,g);for(let e=0;e<k.length;e+=1)k[e].m(a,null);h(a,y)},p(e,t){if(1&t&&w!==(w=e[1].name+"")&&f(p,w),1&t){let n;for(v=e[1].desc,n=0;n<v.length;n+=1){const o=Aa(e,v,n);k[n]?k[n].p(o,t):(k[n]=Ra(o),k[n].c(),k[n].m(a,y))}for(;n<k.length;n+=1)k[n].d(1);k.length=v.length}},d(e){e&&l(a),b(k,e)}}}function xa(e){let a,t=Object.values(e[0].specs),o=[];for(let a=0;a<t.length;a+=1)o[a]=Pa(Sa(e,t,a));return{c(){a=n("ul");for(let e=0;e<o.length;e+=1)o[e].c()},l(e){a=s(e,"UL",{});var t=i(a);for(let e=0;e<o.length;e+=1)o[e].l(t);t.forEach(l)},m(e,t){d(e,a,t);for(let e=0;e<o.length;e+=1)o[e].m(a,null)},p(e,[n]){if(1&n){let s;for(t=Object.values(e[0].specs),s=0;s<t.length;s+=1){const i=Sa(e,t,s);o[s]?o[s].p(i,n):(o[s]=Pa(i),o[s].c(),o[s].m(a,null))}for(;s<o.length;s+=1)o[s].d(1);o.length=t.length}},i:g,o:g,d(e){e&&l(a),b(o,e)}}}function Ta(e,a,t){let{rule:n}=a;return e.$$set=e=>{"rule"in e&&t(0,n=e.rule)},[n]}class Ca extends e{constructor(e){super(),a(this,e,Ta,xa,t,{rule:0})}}function Ma(e,a,t){const n=e.slice();return n[1]=a[t],n[3]=t,n}function Ba(e,a,t){const n=e.slice();return n[1]=a[t],n[3]=t,n}function Ea(e,a,t){const n=e.slice();return n[5]=a[t],n[3]=t,n}function Ia(e){let a,t,c=e[5]+"";return{c(){a=n("td"),t=o(c),this.h()},l(e){a=s(e,"TD",{style:!0});var n=i(a);t=r(n,c),n.forEach(l),this.h()},h(){y(a,"max-width",e[0].table.widths[e[3]]+"%"),y(a,"width",e[0].table.widths[e[3]]+"%")},m(e,n){d(e,a,n),h(a,t)},p(e,n){1&n&&c!==(c=e[5]+"")&&f(t,c),1&n&&y(a,"max-width",e[0].table.widths[e[3]]+"%"),1&n&&y(a,"width",e[0].table.widths[e[3]]+"%")},d(e){e&&l(a)}}}function ja(e){let a,t,c=e[1]+"";return{c(){a=n("td"),t=o(c),this.h()},l(e){a=s(e,"TD",{style:!0});var n=i(a);t=r(n,c),n.forEach(l),this.h()},h(){y(a,"max-width",e[0].table.widths[e[3]]+"%"),y(a,"width",e[0].table.widths[e[3]]+"%")},m(e,n){d(e,a,n),h(a,t)},p(e,n){1&n&&c!==(c=e[1]+"")&&f(t,c),1&n&&y(a,"max-width",e[0].table.widths[e[3]]+"%"),1&n&&y(a,"width",e[0].table.widths[e[3]]+"%")},d(e){e&&l(a)}}}function Ga(e){let a,t,o=Object.values(e[1]),r=[];for(let a=0;a<o.length;a+=1)r[a]=ja(Ma(e,o,a));return{c(){a=n("tr");for(let e=0;e<r.length;e+=1)r[e].c();t=u(),this.h()},l(e){a=s(e,"TR",{class:!0});var n=i(a);for(let e=0;e<r.length;e+=1)r[e].l(n);t=m(n),n.forEach(l),this.h()},h(){c(a,"class","svelte-1vpg0vt")},m(e,n){d(e,a,n);for(let e=0;e<r.length;e+=1)r[e].m(a,null);h(a,t)},p(e,n){if(1&n){let s;for(o=Object.values(e[1]),s=0;s<o.length;s+=1){const i=Ma(e,o,s);r[s]?r[s].p(i,n):(r[s]=ja(i),r[s].c(),r[s].m(a,t))}for(;s<r.length;s+=1)r[s].d(1);r.length=o.length}},d(e){e&&l(a),b(r,e)}}}function Oa(e){let a,t,o,r,f=e[0].table.headers,p=[];for(let a=0;a<f.length;a+=1)p[a]=Ia(Ea(e,f,a));let y=e[0].table.contents,w=[];for(let a=0;a<y.length;a+=1)w[a]=Ga(Ba(e,y,a));return{c(){a=n("div"),t=n("table"),o=n("tr");for(let e=0;e<p.length;e+=1)p[e].c();r=u();for(let e=0;e<w.length;e+=1)w[e].c();this.h()},l(e){a=s(e,"DIV",{class:!0});var n=i(a);t=s(n,"TABLE",{class:!0});var c=i(t);o=s(c,"TR",{class:!0});var d=i(o);for(let e=0;e<p.length;e+=1)p[e].l(d);d.forEach(l),r=m(c);for(let e=0;e<w.length;e+=1)w[e].l(c);c.forEach(l),n.forEach(l),this.h()},h(){c(o,"class","table-header svelte-1vpg0vt"),c(t,"class","svelte-1vpg0vt"),c(a,"class","rule-table svelte-1vpg0vt")},m(e,n){d(e,a,n),h(a,t),h(t,o);for(let e=0;e<p.length;e+=1)p[e].m(o,null);h(t,r);for(let e=0;e<w.length;e+=1)w[e].m(t,null)},p(e,[a]){if(1&a){let t;for(f=e[0].table.headers,t=0;t<f.length;t+=1){const n=Ea(e,f,t);p[t]?p[t].p(n,a):(p[t]=Ia(n),p[t].c(),p[t].m(o,null))}for(;t<p.length;t+=1)p[t].d(1);p.length=f.length}if(1&a){let n;for(y=e[0].table.contents,n=0;n<y.length;n+=1){const o=Ba(e,y,n);w[n]?w[n].p(o,a):(w[n]=Ga(o),w[n].c(),w[n].m(t,null))}for(;n<w.length;n+=1)w[n].d(1);w.length=y.length}},i:g,o:g,d(e){e&&l(a),b(p,e),b(w,e)}}}function Ya(e,a,t){let{rule:n}=a;return e.$$set=e=>{"rule"in e&&t(0,n=e.rule)},[n]}class Ha extends e{constructor(e){super(),a(this,e,Ya,Oa,t,{rule:0})}}function Fa(e,a,t){const n=e.slice();return n[1]=a[t],n}function La(e){let a,t,u=e[1]+"";return{c(){a=n("p"),t=o(u),this.h()},l(e){a=s(e,"P",{class:!0});var n=i(a);t=r(n,u),n.forEach(l),this.h()},h(){c(a,"class","sub-desc svelte-1g7stbd")},m(e,n){d(e,a,n),h(a,t)},p(e,a){1&a&&u!==(u=e[1]+"")&&f(t,u)},d(e){e&&l(a)}}}function Wa(e){let a,t,p,y,w=e[0].name+"",v=e[0].desc,k=[];for(let a=0;a<v.length;a+=1)k[a]=La(Fa(e,v,a));return{c(){a=n("details"),t=n("summary"),p=o(w),y=u();for(let e=0;e<k.length;e+=1)k[e].c();this.h()},l(e){a=s(e,"DETAILS",{class:!0});var n=i(a);t=s(n,"SUMMARY",{class:!0});var o=i(t);p=r(o,w),o.forEach(l),y=m(n);for(let e=0;e<k.length;e+=1)k[e].l(n);n.forEach(l),this.h()},h(){c(t,"class","sub-name svelte-1g7stbd"),c(a,"class","subrule-details svelte-1g7stbd")},m(e,n){d(e,a,n),h(a,t),h(t,p),h(a,y);for(let e=0;e<k.length;e+=1)k[e].m(a,null)},p(e,[t]){if(1&t&&w!==(w=e[0].name+"")&&f(p,w),1&t){let n;for(v=e[0].desc,n=0;n<v.length;n+=1){const o=Fa(e,v,n);k[n]?k[n].p(o,t):(k[n]=La(o),k[n].c(),k[n].m(a,null))}for(;n<k.length;n+=1)k[n].d(1);k.length=v.length}},i:g,o:g,d(e){e&&l(a),b(k,e)}}}function Ua(e,a,t){let{subrule:n}=a;return e.$$set=e=>{"subrule"in e&&t(0,n=e.subrule)},[n]}class Na extends e{constructor(e){super(),a(this,e,Ua,Wa,t,{subrule:0})}}export{Na as M,Ha as a,Ca as b,Da as c,ga as d};
