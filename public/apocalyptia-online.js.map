{"version":3,"file":"apocalyptia-online.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../node_modules/svelte-routing/src/contexts.js","../node_modules/svelte-routing/src/history.js","../node_modules/svelte-routing/src/utils.js","../node_modules/svelte-routing/src/Router.svelte","../node_modules/svelte-routing/src/Route.svelte","../src/routes.js","../src/layout/TitleBar.svelte","../src/layout/BackNextButtons.svelte","../src/models/character/traits.js","../src/models/character/skills.js","../src/models/stores.js","../src/models/character/character.js","../src/components/creator/Description.svelte","../src/components/creator/Traits.svelte","../src/components/creator/Skills.svelte","../src/components/creator/Properties.svelte","../src/models/character/abilities.js","../src/components/creator/Abilities.svelte","../src/pages/Creator.svelte","../src/layout/RefList.svelte","../src/layout/HideShow.js","../src/models/rules/rule.js","../src/models/rules/combat/actions/Prepare.js","../src/models/rules/combat/actions/Actions.js","../src/models/rules/combat/attack/Attack.js","../src/models/rules/combat/communication/Communication.js","../src/models/rules/combat/damage/DamageReduction.js","../src/models/rules/combat/damage/FireDamage.js","../src/models/rules/combat/damage/Pain.js","../src/models/rules/combat/damage/Damage.js","../src/models/rules/combat/defense/Reflex.js","../src/models/rules/combat/defense/Defense.js","../src/models/rules/combat/health/Bleeding.js","../src/models/rules/combat/health/Recovery.js","../src/models/rules/combat/health/Health.js","../src/models/rules/combat/movement/Movement.js","../src/models/rules/combat/time/Time.js","../src/models/rules/combat/vehicles/Burning.js","../src/models/rules/combat/vehicles/Conditions.js","../src/models/rules/combat/vehicles/Occupants.js","../src/models/rules/combat/vehicles/Pedestrians.js","../src/models/rules/combat/vehicles/Tires.js","../src/models/rules/combat/vehicles/Wreck.js","../src/models/rules/combat/Combat.js","../src/models/rules/combat/vehicles/Vehicles.js","../src/models/rules/maneuvers/defensive/DefensiveManeuvers.js","../src/models/rules/maneuvers/defensive/block/Block.js","../src/models/rules/maneuvers/defensive/dodge/Dodge.js","../src/models/rules/maneuvers/defensive/duck/Duck.js","../src/models/rules/maneuvers/defensive/fulldefense/FullDefense.js","../src/models/rules/maneuvers/defensive/hide/Hide.js","../src/models/rules/maneuvers/defensive/protect/Protect.js","../src/models/rules/maneuvers/defensive/sneak/Sneak.js","../src/models/rules/maneuvers/offensive/aim/Aim.js","../src/models/rules/maneuvers/offensive/calledshot/CalledShot.js","../src/models/rules/maneuvers/offensive/disarm/Disarm.js","../src/models/rules/maneuvers/offensive/grab/Hold.js","../src/models/rules/maneuvers/offensive/grab/Tackle.js","../src/models/rules/maneuvers/offensive/grab/Throw.js","../src/models/rules/maneuvers/offensive/OffensiveManeuvers.js","../src/models/rules/maneuvers/offensive/grab/Grab.js","../src/models/rules/maneuvers/offensive/push/Push.js","../src/models/rules/maneuvers/offensive/reload/Reload.js","../src/models/rules/maneuvers/offensive/shove/Shove.js","../src/models/rules/maneuvers/offensive/trip/Trip.js","../src/models/rules/maneuvers/social/SocialManeuvers.js","../src/models/rules/maneuvers/social/distract/Distract.js","../src/models/rules/maneuvers/social/encourage/Encourage.js","../src/models/rules/maneuvers/social/interrogate/Interrogate.js","../src/models/rules/maneuvers/social/negotiate/Negotiate.js","../src/models/rules/maneuvers/social/recruit/Recruit.js","../src/models/rules/maneuvers/social/taunt/Taunt.js","../src/models/rules/maneuvers/social/torture/Torture.js","../src/models/rules/maneuvers/Maneuvers.js","../src/models/rules/situations/bleeding/Bleeding.js","../src/models/rules/situations/burning/Burning.js","../src/models/rules/situations/chase/Chase.js","../src/models/rules/situations/concealed/Concealed.js","../src/models/rules/situations/cover/Cover.js","../src/models/rules/situations/defenseless/Defenseless.js","../src/models/rules/situations/falling/Falling.js","../src/models/rules/situations/friendlyfire/FriendlyFire.js","../src/models/rules/situations/needs/Dehydration.js","../src/models/rules/situations/needs/Exhaustion.js","../src/models/rules/situations/needs/Hypothermia.js","../src/models/rules/situations/needs/Starvation.js","../src/models/rules/situations/needs/Suffocation.js","../src/models/rules/situations/Situations.js","../src/models/rules/situations/needs/Needs.js","../src/models/rules/situations/offhand/OffHand.js","../src/models/rules/situations/prone/Prone.js","../src/models/rules/situations/range/Range.js","../src/models/rules/situations/stun/Stun.js","../src/models/rules/situations/unarmed/Unarmed.js","../src/models/rules/situations/unconscious/Unconscious.js","../src/models/rules/situations/unstable/Unstable.js","../src/models/rules/situations/visibility/Visibility.js","../src/pages/Reference.svelte","../src/pages/Home.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment && $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += \" \" + name + \"=\" + JSON.stringify(String(value)\n                .replace(/\"/g, '&#34;')\n                .replace(/'/g, '&#39;'));\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (has_prop(component.$$.props, name)) {\n        name = component.$$.props[name] || name;\n        component.$$.bound[name] = callback;\n        callback(component.$$.ctx[name]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, props) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (key, ret, value = ret) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n            return ret;\n        })\n        : prop_values;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, detail));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","import { safe_not_equal, noop, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export const LOCATION = {};\nexport const ROUTER = {};\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nfunction getLocation(source) {\n  return {\n    ...source.location,\n    state: source.history.state,\n    key: (source.history.state && source.history.state.key) || \"initial\"\n  };\n}\n\nfunction createHistory(source, options) {\n  const listeners = [];\n  let location = getLocation(source);\n\n  return {\n    get location() {\n      return location;\n    },\n\n    listen(listener) {\n      listeners.push(listener);\n\n      const popstateListener = () => {\n        location = getLocation(source);\n        listener({ location, action: \"POP\" });\n      };\n\n      source.addEventListener(\"popstate\", popstateListener);\n\n      return () => {\n        source.removeEventListener(\"popstate\", popstateListener);\n\n        const index = listeners.indexOf(listener);\n        listeners.splice(index, 1);\n      };\n    },\n\n    navigate(to, { state, replace = false } = {}) {\n      state = { ...state, key: Date.now() + \"\" };\n      // try...catch iOS Safari limits to 100 pushState calls\n      try {\n        if (replace) {\n          source.history.replaceState(state, null, to);\n        } else {\n          source.history.pushState(state, null, to);\n        }\n      } catch (e) {\n        source.location[replace ? \"replace\" : \"assign\"](to);\n      }\n\n      location = getLocation(source);\n      listeners.forEach(listener => listener({ location, action: \"PUSH\" }));\n    }\n  };\n}\n\n// Stores history entries in memory for testing or other platforms like Native\nfunction createMemorySource(initialPathname = \"/\") {\n  let index = 0;\n  const stack = [{ pathname: initialPathname, search: \"\" }];\n  const states = [];\n\n  return {\n    get location() {\n      return stack[index];\n    },\n    addEventListener(name, fn) {},\n    removeEventListener(name, fn) {},\n    history: {\n      get entries() {\n        return stack;\n      },\n      get index() {\n        return index;\n      },\n      get state() {\n        return states[index];\n      },\n      pushState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        index++;\n        stack.push({ pathname, search });\n        states.push(state);\n      },\n      replaceState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        stack[index] = { pathname, search };\n        states[index] = state;\n      }\n    }\n  };\n}\n\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst canUseDOM = Boolean(\n  typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n);\nconst globalHistory = createHistory(canUseDOM ? window : createMemorySource());\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nconst paramRe = /^:(.+)/;\n\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Check if `string` starts with `search`\n * @param {string} string\n * @param {string} search\n * @return {boolean}\n */\nexport function startsWith(string, search) {\n  return string.substr(0, search.length) === search;\n}\n\n/**\n * Check if `segment` is a root segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isRootSegment(segment) {\n  return segment === \"\";\n}\n\n/**\n * Check if `segment` is a dynamic segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isDynamic(segment) {\n  return paramRe.test(segment);\n}\n\n/**\n * Check if `segment` is a splat\n * @param {string} segment\n * @return {boolean}\n */\nfunction isSplat(segment) {\n  return segment[0] === \"*\";\n}\n\n/**\n * Split up the URI into segments delimited by `/`\n * @param {string} uri\n * @return {string[]}\n */\nfunction segmentize(uri) {\n  return (\n    uri\n      // Strip starting/ending `/`\n      .replace(/(^\\/+|\\/+$)/g, \"\")\n      .split(\"/\")\n  );\n}\n\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} str\n * @return {string}\n */\nfunction stripSlashes(str) {\n  return str.replace(/(^\\/+|\\/+$)/g, \"\");\n}\n\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nfunction rankRoute(route, index) {\n  const score = route.default\n    ? 0\n    : segmentize(route.path).reduce((score, segment) => {\n        score += SEGMENT_POINTS;\n\n        if (isRootSegment(segment)) {\n          score += ROOT_POINTS;\n        } else if (isDynamic(segment)) {\n          score += DYNAMIC_POINTS;\n        } else if (isSplat(segment)) {\n          score -= SEGMENT_POINTS + SPLAT_PENALTY;\n        } else {\n          score += STATIC_POINTS;\n        }\n\n        return score;\n      }, 0);\n\n  return { route, score, index };\n}\n\n/**\n * Give a score to all routes and sort them on that\n * @param {object[]} routes\n * @return {object[]}\n */\nfunction rankRoutes(routes) {\n  return (\n    routes\n      .map(rankRoute)\n      // If two routes have the exact same score, we go by index instead\n      .sort((a, b) =>\n        a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index\n      )\n  );\n}\n\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { path, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nfunction pick(routes, uri) {\n  let match;\n  let default_;\n\n  const [uriPathname] = uri.split(\"?\");\n  const uriSegments = segmentize(uriPathname);\n  const isRootUri = uriSegments[0] === \"\";\n  const ranked = rankRoutes(routes);\n\n  for (let i = 0, l = ranked.length; i < l; i++) {\n    const route = ranked[i].route;\n    let missed = false;\n\n    if (route.default) {\n      default_ = {\n        route,\n        params: {},\n        uri\n      };\n      continue;\n    }\n\n    const routeSegments = segmentize(route.path);\n    const params = {};\n    const max = Math.max(uriSegments.length, routeSegments.length);\n    let index = 0;\n\n    for (; index < max; index++) {\n      const routeSegment = routeSegments[index];\n      const uriSegment = uriSegments[index];\n\n      if (routeSegment !== undefined && isSplat(routeSegment)) {\n        // Hit a splat, just grab the rest, and return a match\n        // uri:   /files/documents/work\n        // route: /files/* or /files/*splatname\n        const splatName = routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n        params[splatName] = uriSegments\n          .slice(index)\n          .map(decodeURIComponent)\n          .join(\"/\");\n        break;\n      }\n\n      if (uriSegment === undefined) {\n        // URI is shorter than the route, no match\n        // uri:   /users\n        // route: /users/:userId\n        missed = true;\n        break;\n      }\n\n      let dynamicMatch = paramRe.exec(routeSegment);\n\n      if (dynamicMatch && !isRootUri) {\n        const value = decodeURIComponent(uriSegment);\n        params[dynamicMatch[1]] = value;\n      } else if (routeSegment !== uriSegment) {\n        // Current segments don't match, not dynamic, not splat, so no match\n        // uri:   /users/123/settings\n        // route: /users/:id/profile\n        missed = true;\n        break;\n      }\n    }\n\n    if (!missed) {\n      match = {\n        route,\n        params,\n        uri: \"/\" + uriSegments.slice(0, index).join(\"/\")\n      };\n      break;\n    }\n  }\n\n  return match || default_ || null;\n}\n\n/**\n * Check if the `path` matches the `uri`.\n * @param {string} path\n * @param {string} uri\n * @return {?object}\n */\nfunction match(route, uri) {\n  return pick([route], uri);\n}\n\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nfunction addQuery(pathname, query) {\n  return pathname + (query ? `?${query}` : \"\");\n}\n\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nfunction resolve(to, base) {\n  // /foo/bar, /baz/qux => /foo/bar\n  if (startsWith(to, \"/\")) {\n    return to;\n  }\n\n  const [toPathname, toQuery] = to.split(\"?\");\n  const [basePathname] = base.split(\"?\");\n  const toSegments = segmentize(toPathname);\n  const baseSegments = segmentize(basePathname);\n\n  // ?a=b, /users?b=c => /users?a=b\n  if (toSegments[0] === \"\") {\n    return addQuery(basePathname, toQuery);\n  }\n\n  // profile, /users/789 => /users/789/profile\n  if (!startsWith(toSegments[0], \".\")) {\n    const pathname = baseSegments.concat(toSegments).join(\"/\");\n\n    return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n  }\n\n  // ./       , /users/123 => /users/123\n  // ../      , /users/123 => /users\n  // ../..    , /users/123 => /\n  // ../../one, /a/b/c/d   => /a/b/one\n  // .././one , /a/b/c/d   => /a/b/c/one\n  const allSegments = baseSegments.concat(toSegments);\n  const segments = [];\n\n  allSegments.forEach(segment => {\n    if (segment === \"..\") {\n      segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return addQuery(\"/\" + segments.join(\"/\"), toQuery);\n}\n\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nfunction combinePaths(basepath, path) {\n  return `${stripSlashes(\n    path === \"/\" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`\n  )}/`;\n}\n\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nfunction shouldNavigate(event) {\n  return (\n    !event.defaultPrevented &&\n    event.button === 0 &&\n    !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n  );\n}\n\nexport { stripSlashes, pick, match, resolve, combinePaths, shouldNavigate };\n","<script>\n  import { getContext, setContext, onMount } from \"svelte\";\n  import { writable, derived } from \"svelte/store\";\n  import { LOCATION, ROUTER } from \"./contexts.js\";\n  import { globalHistory } from \"./history.js\";\n  import { pick, match, stripSlashes, combinePaths } from \"./utils.js\";\n\n  export let basepath = \"/\";\n  export let url = null;\n\n  const locationContext = getContext(LOCATION);\n  const routerContext = getContext(ROUTER);\n\n  const routes = writable([]);\n  const activeRoute = writable(null);\n  let hasActiveRoute = false; // Used in SSR to synchronously set that a Route is active.\n\n  // If locationContext is not set, this is the topmost Router in the tree.\n  // If the `url` prop is given we force the location to it.\n  const location =\n    locationContext ||\n    writable(url ? { pathname: url } : globalHistory.location);\n\n  // If routerContext is set, the routerBase of the parent Router\n  // will be the base for this Router's descendants.\n  // If routerContext is not set, the path and resolved uri will both\n  // have the value of the basepath prop.\n  const base = routerContext\n    ? routerContext.routerBase\n    : writable({\n        path: basepath,\n        uri: basepath\n      });\n\n  const routerBase = derived([base, activeRoute], ([base, activeRoute]) => {\n    // If there is no activeRoute, the routerBase will be identical to the base.\n    if (activeRoute === null) {\n      return base;\n    }\n\n    const { path: basepath } = base;\n    const { route, uri } = activeRoute;\n    // Remove the potential /* or /*splatname from\n    // the end of the child Routes relative paths.\n    const path = route.default ? basepath : route.path.replace(/\\*.*$/, \"\");\n\n    return { path, uri };\n  });\n\n  function registerRoute(route) {\n    const { path: basepath } = $base;\n    let { path } = route;\n\n    // We store the original path in the _path property so we can reuse\n    // it when the basepath changes. The only thing that matters is that\n    // the route reference is intact, so mutation is fine.\n    route._path = path;\n    route.path = combinePaths(basepath, path);\n\n    if (typeof window === \"undefined\") {\n      // In SSR we should set the activeRoute immediately if it is a match.\n      // If there are more Routes being registered after a match is found,\n      // we just skip them.\n      if (hasActiveRoute) {\n        return;\n      }\n\n      const matchingRoute = match(route, $location.pathname);\n      if (matchingRoute) {\n        activeRoute.set(matchingRoute);\n        hasActiveRoute = true;\n      }\n    } else {\n      routes.update(rs => {\n        rs.push(route);\n        return rs;\n      });\n    }\n  }\n\n  function unregisterRoute(route) {\n    routes.update(rs => {\n      const index = rs.indexOf(route);\n      rs.splice(index, 1);\n      return rs;\n    });\n  }\n\n  // This reactive statement will update all the Routes' path when\n  // the basepath changes.\n  $: {\n    const { path: basepath } = $base;\n    routes.update(rs => {\n      rs.forEach(r => (r.path = combinePaths(basepath, r._path)));\n      return rs;\n    });\n  }\n  // This reactive statement will be run when the Router is created\n  // when there are no Routes and then again the following tick, so it\n  // will not find an active Route in SSR and in the browser it will only\n  // pick an active Route after all Routes have been registered.\n  $: {\n    const bestMatch = pick($routes, $location.pathname);\n    activeRoute.set(bestMatch);\n  }\n\n  if (!locationContext) {\n    // The topmost Router in the tree is responsible for updating\n    // the location store and supplying it through context.\n    onMount(() => {\n      const unlisten = globalHistory.listen(history => {\n        location.set(history.location);\n      });\n\n      return unlisten;\n    });\n\n    setContext(LOCATION, location);\n  }\n\n  setContext(ROUTER, {\n    activeRoute,\n    base,\n    routerBase,\n    registerRoute,\n    unregisterRoute\n  });\n</script>\n\n<slot></slot>\n","<script>\n  import { getContext, onDestroy } from \"svelte\";\n  import { ROUTER, LOCATION } from \"./contexts.js\";\n\n  export let path = \"\";\n  export let component = null;\n\n  const { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n  const location = getContext(LOCATION);\n\n  const route = {\n    path,\n    // If no path prop is given, this Route will act as the default Route\n    // that is rendered if no other Route in the Router is a match.\n    default: path === \"\"\n  };\n  let routeParams = {};\n  let routeProps = {};\n\n  $: if ($activeRoute && $activeRoute.route === route) {\n    routeParams = $activeRoute.params;\n  }\n\n  $: {\n    const { path, component, ...rest } = $$props;\n    routeProps = rest;\n  }\n\n  registerRoute(route);\n\n  // There is no need to unregister Routes in SSR since it will all be\n  // thrown away anyway.\n  if (typeof window !== \"undefined\") {\n    onDestroy(() => {\n      unregisterRoute(route);\n    });\n  }\n</script>\n\n{#if $activeRoute !== null && $activeRoute.route === route}\n  {#if component !== null}\n    <svelte:component this=\"{component}\" location={$location} {...routeParams} {...routeProps}  />\n  {:else}\n    <slot params=\"{routeParams}\" location={$location}></slot>\n  {/if}\n{/if}\n","import { navigate } from 'svelte-routing'\n\nconst router = {\n    Home: () => { navigate(`/`, { replace: true }) },\n    Creator: () => { navigate(`/creator`, { replace: true }) },\n    Reference: () => { navigate(`/reference`, { replace: true }) }\n}\n\nexport default router","<script>\n    import router from '../routes'\n</script>\n\n<button class='title-bar' on:click={router.Home}>\n    <span class='title'>Apocalyptia Online</span>\n    <span class='beta'>beta</span>\n</button>\n\n<style>\n    .title-bar {\n        height: 50px;\n        position: fixed;\n        text-align: center;\n        top: 0;\n        width: 100vw;\n        z-index: 1;\n    }\n    .title {\n        font-size: 1.8rem;\n    }\n    .beta {\n        color: lightcoral;\n        border: 1px dotted lightcoral;\n        font-size: .8rem;\n        padding: 3px;\n    }\n</style>","<script>\n    import { createEventDispatcher } from 'svelte'\n    export let step\n\n    const d = createEventDispatcher()\n\n    function back () { d('message', { number: --step }) }\n\n    function next() { d('message', { number: ++step }) }\n</script>\n\n<div>\n    <button on:click={back}>Back</button>\n    <button on:click={next}>Next</button>\n</div>\n\n<style>\n    div {\n        display: flex;\n        flex-direction: row;\n        position: fixed;\n        left: 0;\n        bottom: 0px;\n        height: 50px;\n        width: 100vw;\n    }\n    button {\n        border: 1px solid;\n        width: 50vw;\n    }\n</style>","class Trait {\n    constructor (name) {\n        this.name = name,\n        this.score = 1,\n        this.max = 6\n    }\n}\n\nexport let traitsList = {\n    'agility': new Trait(`Agility`),\n    'brains': new Trait(`Brains`),\n    'constitution': new Trait(`Constitution`),\n    'demeanor': new Trait(`Demeanor`),\n}\n\nexport const traitPoints = 12\n","class Skill {\n    constructor (name, parent) {\n        this.name = name,\n        this.parent = parent,\n        this.score = 0\n    }\n}\n\nexport let skillsList = {\n    'acrobatics': new Skill(`Acrobatics`, `Agility`),\n    'athletics': new Skill(`Athletics`, `Constitution`),\n    'build': new Skill(`Build`, `Brains`),\n    'drive': new Skill(`Drive`, `Constitution`),\n    'larceny': new Skill(`Larceny`, `Agility`),\n    'leadership': new Skill(`Leadership`, `Demeanor`),\n    'medicine': new Skill(`Medicine`, `Brains`),\n    'melee': new Skill(`Melee`, `Constitution`),\n    'perception': new Skill(`Perception`, `Brains`),\n    'perform': new Skill(`Perform`, `Demeanor`),\n    'ranged': new Skill(`Ranged`, `Agility`),\n    'science': new Skill(`Science`, `Brains`),\n    'socialize': new Skill(`Socialize`, `Demeanor`),\n    'stealth': new Skill(`Stealth`, `Agility`),\n    'survival': new Skill(`Survival`, `Constitution`),\n    'tame': new Skill(`Tame`, `Demeanor`),\n}","import { writable } from 'svelte/store'\nimport { Character } from './character/character'\n\nlet newCharacter = new Character()\n\nexport const CharacterStore = writable(newCharacter)","import { traitsList } from './traits'\nimport { skillsList } from './skills'\n\n\nexport class Character {\n    constructor() {\n        this.scenario = ``,\n        this.completed = false,\n        this.description = {\n            age: {           label: `Age`,       value: `` },\n            characterName: { label: `Character`, value: `` },\n            gender: {        label: `Gender`,    value: `` },\n            hair: {          label: `Hair`,      value: `` },\n            height: {        label: `Height`,    value: `` },\n            playerName: {    label: `Player`,    value: `` },\n            skin: {          label: `Skin`,      value: `` },\n            weight: {        label: `Weight`,    value: `` },\n        },\n        this.traits = traitsList,\n        this.skills = skillsList,\n        this.props = {\n            actions: { name: `Actions`,    base: 1, score: 1, setActions: () => {\n                let actions = Math.floor((this.traits[`agility`].score + this.traits[`brains`].score) / 2)\n                this.props.actions.base = actions\n                return actions\n            } },\n            block: {   name: `Block`,      base: 0, score: 0, setBlock: () => {\n                let block = this.skills[`melee`].score\n                this.props.block.base = block\n                return block\n            } },\n            dodge: {   name: `Dodge`,      base: 0, score: 0, setDodge: () => {\n                let dodge = this.skills[`acrobatics`].score\n                this.props.dodge.base = dodge\n                return dodge\n            } },\n            health: {  name: `Health`,     base: 3, score: 3, setHealth: () => {\n                let health = this.traits[`constitution`].score * 3\n                this.props.health.base = health\n                return health\n            } },\n            luck: {    name: `Luck`,       base: 1, score: 1, setLuck: () => {\n                let luck = this.traits[`demeanor`].score\n                this.props.luck.base = luck\n                return luck\n            } },\n            psyche: {  name: `Psyche`,     base: 1, score: 1, setPsyche: () => {\n                let psyche = this.traits[`demeanor`].score * 3\n                this.props.psyche.base = psyche\n                return psyche\n            }},\n            reflex: {  name: `Reflex`,     base: 0, score: 0, setReflex: () => {\n                let reflex = Math.floor(this.traits[`brains`].score / 2)\n                this.props.reflex.base = reflex\n                return reflex\n            } },\n            speed: {   name: `Speed`,      base: 2, score: 2, setSpeed: () => {\n                let speed = this.traits[`agility`].score + this.traits[`constitution`].score\n                this.props.speed.base = speed\n                return speed\n            } },\n            xp: {      name: `Experience`, base: 6, score: 6, setXP: () => {\n                let xp = this.traits[`brains`].score * 6\n                this.props.xp.base = xp\n                return xp\n            } },\n        },\n        this.abilities = [],\n        this.gear = {\n            armor: {    name: `Armor`,    inventory: [] },\n            weapons: {  name: `Weapons`,  inventory: [] },\n            backpack: { name: `Backpack`, inventory: [] },\n            ammo: {     name: `Ammo`,     inventory: [] },\n        },\n        this.reflex_score = () => {\n            return Math.round(this.traits[`brains`].score / 2)\n        },\n        this.dodge_score = () => {\n            return this.traits[`agility`].score\n        },\n        this.block_score = () => {\n            return this.skills.melee.score\n        }\n    }\n}","<script>\n    import { CharacterStore } from '../../models/stores'\n    let char\n    const unsubscribe = CharacterStore.subscribe(value => { char = value })\n</script>\n\n<div class='step'>\n    <div class='step-title'>\n        <h2>Description</h2>\n    </div>\n    <div class='stat-block'>\n        <span class='stat-label'>Player:</span>\n        <input\n            type='text'\n            class='full-input'\n            bind:value={char.description.playerName.value}\n        >\n    </div>\n    <div class='stat-block'>\n        <span class='stat-label'>Character:</span>\n        <input\n            type='text'\n            class='full-input'\n            bind:value={char.description.characterName.value}\n        >\n    </div>\n    <div class='stat-block'>\n        <div class='half-stat-block'>\n            <span class='stat-label'>Height:</span>\n            <input\n                type='text'\n                class='half-input'\n                bind:value={char.description.height.value}\n            >\n        </div>\n        <div class='half-stat-block'>\n            <span class='stat-label'>Weight:</span>\n            <input\n                type='text'\n                class='half-input'\n                bind:value={char.description.weight.value}\n            >\n        </div>\n    </div>\n    <div class='stat-block'>\n        <div class='half-stat-block'>\n            <span class='stat-label'>Hair:</span>\n            <input\n                type='text'\n                class='half-input'\n                bind:value={char.description.hair.value}\n            >\n        </div>\n        <div class='half-stat-block'>\n            <span class='stat-label'>Skin:</span>\n            <input\n                type='text'\n                class='half-input'\n                bind:value={char.description.skin.value}\n            >\n        </div>\n    </div>\n    <div class='stat-block'>\n        <div class='half-stat-block'>\n            <span class='stat-label'>Gender:</span>\n            <input\n                type='text'\n                class='half-input'\n                bind:value={char.description.gender.value}\n            >\n        </div>\n        <div class='half-stat-block'>\n            <span class='stat-label'>Age:</span>\n            <input\n                type='text'\n                class='half-input'\n                bind:value={char.description.age.value}\n            >\n        </div>\n    </div>\n</div>","<script>\n    import { CharacterStore } from '../../models/stores'\n    let char\n    const unsubscribe = CharacterStore.subscribe(value => { char = value })\n\n    import { traitPoints } from '../../models/character/traits'\n\n    const traits = Object.keys(char.traits)\n\n    let remaining = traitPoints - traits.length\n\n    function updateTraits() {\n        let r = 0\n        for (const trait of traits) r += char.traits[trait].score\n        remaining = traitPoints - r\n    }\n</script>\n\n<div class='step'>\n    <div class='step-title'>\n        <h2>Traits</h2>\n    </div>\n    <div class='remaining'>\n        <h3>Points Remaining: {remaining}</h3>\n    </div>\n    {#each traits as trait}\n        <div class='stat-block'>\n            <span class='stat-label'>{char.traits[trait].name}</span>\n            <input\n                class='stat-input'\n                type='number'\n                min='1'\n                max={Math.min(char.traits[trait].max, (char.traits[trait].score + remaining))}\n                on:input={updateTraits}\n                bind:value={char.traits[trait].score}\n            >\n        </div>\n    {/each}\n</div>\n\n<style>\n    .remaining {\n        margin-left: 2rem;\n    }\n</style>","<script>\n    import { CharacterStore } from '../../models/stores'\n    let char\n    const unsubscribe = CharacterStore.subscribe(value => { char = value })\n\n    const traits = Object.keys(char.traits)\n    const skills = Object.keys(char.skills)\n\n    let startingSkillPoints = char.traits.brains.score * 3\n    let remaining = startingSkillPoints\n    updateSkills()\n\n    function updateSkills() {\n        let r = 0\n        for (const skill of skills) r += char.skills[skill].score\n        remaining = startingSkillPoints - r\n    }\n</script>\n\n<div class='step'>\n    <div class='step-title'>\n        <h2>Skills</h2>\n    </div>\n    <div class='remaining'>\n        <h3>Points Remaining: {remaining}</h3>\n    </div>\n    {#each traits as trait}\n        <div class='skill-section'>\n            <div class='parent-trait-title'>\n                {char.traits[trait].name} Skills\n            </div>\n            {#each skills as skill}\n                {#if char.traits[trait].name == char.skills[skill].parent}\n                    <div class='stat-block'>\n                        <span class='stat-label'>{char.skills[skill].name}</span>\n                        <input\n                            class='stat-input'\n                            type='number'\n                            min='0'\n                            max='{Math.min(char.traits[trait].score, (char.skills[skill].score + remaining))}'\n                            on:input={updateSkills}\n                            bind:value={char.skills[skill].score}\n                        >\n                    </div>\n                {/if}\n            {/each}\n        </div>\n    {/each}\n</div>\n\n<style>\n    .skill-section{\n        border: 1px dashed var(--char-color);\n\t\tmargin: 20px 5px 20px 5px;\n        padding: 0 10px 10px 10px;\n    }\n    .parent-trait-title {\n        margin-bottom: 10px;\n    }\n    .remaining {\n        margin-left: 2rem;\n    }\n</style>","<script>\n    import { CharacterStore } from '../../models/stores'\n    let char\n    const unsubscribe = CharacterStore.subscribe(value => { char = value })\n</script>\n\n<div class='step'>\n    <div class='step-title'>\n        <h2>Properties</h2>\n    </div>\n    <div class='stat-block'>\n        <span class='three-column'>Health:</span>\n        <input\n            type='number'\n            class='three-column'\n            value={char.props.health.setHealth()}\n            min=0\n            max={char.props.health.score}\n        >\n        <span class='three-column'>{char.props.health.score}</span>\n    </div>\n    <div class='stat-block'>\n        <span class='three-column'>Pain:</span>\n        <input\n            type='number'\n            class='three-column'\n            value=0\n            min=0\n            max={char.props.health.score}\n        >\n        <span class='three-column'>{Math.floor(char.props.health.base/2)}</span>\n    </div>\n    <div class='stat-block'>\n        <span class='three-column'>Psyche:</span>\n        <input\n            type='number'\n            class='three-column'\n            value={char.props.psyche.setPsyche()}\n            min=0\n            max={char.props.psyche.score}\n        >\n        <span class='three-column'>{char.props.psyche.score}</span>\n    </div>\n\n    <div class='stat-block'>\n        <span class='three-column'>\n            <span class='stat-label'>Reflex:</span>\n            <span class='stat-input'>{char.props.reflex.setReflex()}</span>\n        </span>\n        <span class='three-column'>\n            <span class='stat-label'>Block:</span>\n            <span class='stat-input'>{char.props.block.setBlock()}</span>\n        </span>\n        <span class='three-column'>\n            <span class='stat-label'>Dodge:</span>\n            <span class='stat-input'>{char.props.dodge.setDodge()}</span>\n        </span>\n    </div>\n\n    <div class='stat-block'>\n        <span class='stat-label'>Actions:</span>\n        <span class='stat-input'>{char.props.actions.setActions()}</span>\n    </div>\n    <div class='stat-block'>\n        <span class='stat-label'>Speed:</span>\n        <span class='stat-input'>{char.props.speed.setSpeed()}</span>\n    </div>\n    <div class='stat-block'>\n        <span class='stat-label'>Luck:</span>\n        <span class='stat-input'>{char.props.luck.setLuck()}</span>\n    </div>\n    <div class='stat-block'>\n        <span class='stat-label'>Experience:</span>\n        <span class='stat-input'>{char.props.xp.setXP()}</span>\n    </div>\n</div>","class Ability {\n    constructor(name, description, max, xp, taken, notes) {\n        this.name = name\n        this.description = description\n        this.max = max\n        this.xp = xp\n        this.taken = taken\n        this.notes = notes\n    }\n}\n\nexport const AbilityList = [\n    // 3 XP Abilities\n    new Ability(`Favorite Weapon`,      `Botch is only a Fail with this one weapon.`,   1, 3, 0, ``),\n    new Ability(`Hyper Immunity`,       `+1 to resist Diseases.`,                       3, 3, 0, ``),\n    new Ability(`Pack Mentality`,       `+1 ATK at same target a Comrade ATKs.`,        1, 3, 0, ``),\n    new Ability(`Quick Reload`,         `Free Reload once per rnd.`,                    1, 3, 0, ``),\n    new Ability(`Specialize*`,          `+1 to a Skill Specialty.`,                     1, 3, 0, ``),\n    new Ability(`Weapon Training*`,     `+1 ATK for a specific weapon.`,                1, 3, 0, ``),\n    // 6 XP Abilities\n    new Ability(`Efficient Work*`,      `[Time / 2] for a Skill (minimum 1 action).`,   1, 6, 0, ``),\n    new Ability(`Fast Draw`,            `Free item draw once per rnd.`,                 1, 6, 0, ``),\n    new Ability(`Fleet Footed`,         `+1 Speed.`,                                    3, 6, 0, ``),\n    new Ability(`Multilingual*`,        `Learn a different form of communication.`,     9, 6, 0, ``),\n    new Ability(`Practice*`,            `+1 to a Skill (up to the parent Trait).`,      1, 6, 0, ``),\n    // OPEN SLOT FOR NEW ABILITY\n    // 9 XP Abilities\n    new Ability(`Danger Sense`,         `+1 Reflex.`,                                   1, 9, 0, ``),\n    new Ability(`Discipline`,           `Ignore 1 Pain penalty.`,                       3, 9, 0, ``),\n    new Ability(`Fortunate`,            `+1 Luck.`,                                     1, 9, 0, ``),\n    new Ability(`Free Running`,         `Climb at [Speed] for 2AP.`,                    1, 9, 0, ``),\n    new Ability(`Unorthodox*`,          `Pick a new parent Trait for a Skill.`,         1, 9, 0, ``),\n    // OPEN SLOT FOR NEW ABILITY\n    // 12 XP Abilities\n    new Ability(`Fencing`,              `Free Block roll once per rnd.`,                1, 12, 0, ``),\n    new Ability(`Side-step`,            `Free Dodge roll once per rnd.`,                1, 12, 0, ``),\n    new Ability(`Wrestling`,            `Free Grab roll once per rnd.`,                 1, 12, 0, ``),\n    // 15 XP Abilities\n    new Ability(`Firm Grip`,            `Use 2h weapons in 1h, up to Size 3.`,          1, 15, 0, ``),\n    new Ability(`Hard Headed`,          `Ignore Stun from Head DMG.`,                   1, 15, 0, ``),\n    new Ability(`Powerful Strike*`,     `+1 DMG for a specific Melee weapon.`,          1, 15, 0, ``),\n    // 18 XP Abilities\n    new Ability(`Assassin`,             `+3 DMG to ATKs from Concealment.`,             1, 18, 0, ``),\n    new Ability(`Vehicle Operation*`,   `Proficiently operate a class of vehicle.`,     1, 18, 0, ``),\n    // 24 XP Abilities\n    new Ability(`Ambidextrous`,         `Off-hand penalty is -1 instead of -3.`,        1, 24, 0, ``),\n    new Ability(`Tough`,                `+1 Health.`,                                   3, 24, 0, ``),\n    // 30 XP Abilities\n    new Ability(`Self Improvement*`,    `+1 to a Trait (max 6).`,                       3, 30, 0, ``),\n    new Ability(`Second Chance`,        `Spend this Ability to avoid Death once.`,      9, 30, 0, ``)\n]","<script>\n    import { CharacterStore } from '../../models/stores'\n    let char\n    const unsubscribe = CharacterStore.subscribe(value => { char = value })\n\n    import { AbilityList } from '../../models/character/abilities'\n\n    function modifyAbilities() {\n        char.abilities = []\n        AbilityList.forEach(function (ability) {\n            if (ability.taken > 0) {\n                char.abilities.push(ability)\n            }\n        })\n    }\n</script>\n\n<div class='step'>\n    <div class='step-title'>\n        <h2>Abilities</h2>\n    </div>\n    <div class='stat-block'>\n        <div class='abilities-table'>\n            <div class='ability-row header-row separator'>\n                <div class='m-col'>Name</div>\n                <div class='l-col'>Description</div>\n                <div class='s-col'>Max</div>\n                <div class='s-col'>XP</div>\n                <div class='s-col'>Taken</div>\n            </div>\n            {#each AbilityList as ability, index}\n                {#if AbilityList[index-1] != undefined && AbilityList[index].xp != AbilityList[index-1].xp}\n                    <div class='separator'></div>\n                {/if}\n                <div class='ability-row'>\n                    <div class='m-col'>{ability.name}</div>\n                    <div class='l-col'>{ability.description}</div>\n                    <div class='s-col'>{ability.max}</div>\n                    <div class='s-col'>{ability.xp}</div>\n                    <div class='s-col'>\n                        <input\n                            type='number'\n                            class='taken-number'\n                            min=0\n                            max={ability.max}\n                            bind:value={ability.taken}\n                            on:input={modifyAbilities}\n                        >\n                    </div>\n                </div>\n            {/each}\n        </div>\n    </div>\n</div>\n\n<style>\n    .abilities-table {\n        width: 100%;\n    }\n    .ability-row {\n        width: inherit;\n    }\n    .header-row {\n        font-size: 1.25em;\n    }\n    .l-col {\n        display: inline-block;\n        width: 37.5%;\n    }\n    .m-col {\n        display: inline-block;\n        width: 25%;\n    }\n    .s-col {\n        display: inline-block;\n        text-align: center;\n        width: 10%;\n    }\n    .separator {\n        border-bottom: 1px solid;\n        margin-bottom: 10px;\n        padding-bottom: 10px;\n    }\n</style>","<script>\n    import router from '../routes'\n    import BackNextButtons from '../layout/BackNextButtons.svelte'\n\n    import Description from '../components/creator/Description.svelte'\n    import Traits from '../components/creator/Traits.svelte'\n    import Skills from '../components/creator/Skills.svelte'\n    import Properties from '../components/creator/Properties.svelte'\n    import Abilities from '../components/creator/Abilities.svelte'\n    import Gear from '../components/creator/Gear.svelte'\n\n    let step = 0\n    const options = [ Traits, Description, Skills, Properties, Abilities, Gear ]\n    let selected = options[step]\n\n    function nav(event) {\n        step = event.detail.number\n        if (step == options.length || step < 0) { router.Home() }\n        else { selected = options[step] }\n    }\n</script>\n\n<div>\n    <svelte:component this={selected}/>\n</div>\n<BackNextButtons step={step} on:message={nav} />\n\n<style>\n    div {\n        padding: 20px;\n        width: calc(100vw - 40px);\n    }\n</style>\n","<script>\n    import HideShow from './HideShow'\n\n    export let list\n</script>\n\n<div class='page'>\n    <h2>{list.name}</h2>\n    <div class='separator'/>\n    {#each list.rules as r}\n        <div class='box' on:click={() => list = HideShow(r, list)}>\n            <span class='name'>{r.name}</span>\n            {#if r.visible}\n                <div class='notes'>{@html r.notes}</div>\n                {#if r.table}\n                    <div class='separator'/>\n                    <div class='table'><svelte:component this={r.table}/></div>\n                {/if}\n                {#if r.subrules}\n                    <ul class='sub-ul'>\n                        {#each r.subrules as s}\n                            <div class='separator'/>\n                            <li class='sub-li'>\n                                <div class='sub-box'>\n                                    <span class='sub-name'>{s.name}</span>\n                                    <div class='sub-notes'>{@html s.notes}</div>\n                                </div>\n                            </li>    \n                        {/each}\n                    </ul>\n                {/if}\n            {/if}\n        </div>\n        <div class='separator'/>\n    {/each}\n</div>\n\n<style>\n    .box {\n        border: 1px dotted lime;\n        padding: 25px;\n    }\n    .name {\n        font-size: 1.2em;\n        font-weight: bold;\n    }\n    .notes {\n        padding-top: 25px;\n    }\n    .separator {\n        height: 25px;\n    }\n    .sub-ul {\n        list-style: none;\n    }\n    .sub-name {\n        font-size: 1.1em;\n        font-weight: bold;\n    }\n</style>","function HideShow(x, y) {\n    x.visible = !x.visible\n    return y\n}\n\nexport default HideShow","export default class Rule {\n    constructor(name, notes, subrules=[], table='', visible=false) {\n        this.name = name\n        this.notes = notes\n        this.subrules = subrules\n        this.table = table\n        this.visible = visible\n    }\n}","import Rule from '../../rule.js'\n\nexport const Prepare = new Rule(\n    `Prepare`, \n    `You may spend AP on your turn to declare and hold a specific Action to occur on a later turn to preempt a triggering event that you describe. Prepared Actions resolve before other Actions in the order that they are triggered. You may choose to abandon a Prepared Action at any time. If you are still waiting with a Prepared Action on your next turn, the AP you already spent on the Prepared Action does not refresh, but you can continue holding that Prepared Action.`\n)","import Rule from '../../rule.js'\nimport { Prepare } from './Prepare.js'\n\nexport const Actions = new Rule(\n    `Actions`, \n    `Perform Actions by spending Action Points. Your maximum AP is your [(A + B) / 2]. AP refills at the start of your turn. Unless otherwise noted, all Actions cost 1AP. The only way to take an Action on another turn is to make a Defense roll or Ready an Action.`, \n    [Prepare]\n)","import Rule from '../../rule.js'\n\nexport const Attack = new Rule(\n    `Attack`, \n    `There are MATKs (Melee) and RATKs (Ranged). Roll [d6 + MATK or RATK] vs Defense (DEF). Rolling a 6 on the die is an Explosion, which is re-rolled and added cumulatively to the ATK total. Deal bonus DMG = [ATK - DEF] up to your Melee or Ranged score.`\n)","import Rule from '../../rule.js'\n\nexport const Communication = new Rule(\n    `Communication`, \n    `You can speak or shout up to 6 words per round.`\n)","import Rule from '../../rule.js'\n\nexport const DamageReduction = new Rule(\n    `Damage Reduction`, \n    `DR reduces DMG. Armor is reduced by -1 DR after taking DMG that exceeds its DR.`\n)","import Rule from '../../rule.js'\n\nexport const FireDamage = new Rule(\n    `Fire Damage`, \n    `Whenever you take FDMG, 1 Wound is permanent. Only Fire-Resistant (FR) Armor reduces FDMG.`\n)","import Rule from '../../rule.js'\n\nexport const Pain = new Rule(\n    `Pain`, \n    `Wounds (and a few other effects) cause Pain which is a -1 penalty to all rolls and Speed. Pain fades as Wounds heal. You fall Prone if your Speed drops to 0 from Pain. You go unconscious if Pain = [C + D].`\n)","import Rule from '../../rule.js'\nimport { DamageReduction } from './DamageReduction.js'\nimport { FireDamage } from './FireDamage.js'\nimport { Pain } from './Pain.js'\n\nexport const Damage = new Rule(\n    `Damage`, \n    `Damage causes Wounds, which could eventually kill you. Successful ATKs do DMG = [(ATK - DEF) + Weapon DMG]. All Wounds cause Pain penalties.`, \n    [DamageReduction, FireDamage, Pain]\n)","import Rule from '../../rule.js'\n\nexport const Reflex = new Rule(\n    `Reflex`, \n    `[Perception / 2]. Default DEF if you are rendered Defenseless or get Attacked when you are out of AP. Reflex is never rolled. It is a static Difficulty for enemy ATKs.`\n)","import Rule from '../../rule.js'\nimport { Reflex } from './Reflex.js'\n\nexport const Defense = new Rule(\n    `Defense`, \n    `1AP to defend against an ATK with Block [d6 + Melee] or Dodge [d6 + Acrobatics]. A Botch means you fall Prone if Dodging or drop your weapon if Blocking. If you are unaware or unable to avoid the Attack, you are Defenseless and must use Reflex for DEF.`, \n    [Reflex]\n)","import Rule from '../../rule.js'\n\nexport const Bleeding = new Rule(\n    `Bleeding`, \n    `When you take Wounds = [Health / 2] or more, you begin taking an additional 1DMG per minute. Roll Medicine(First-Aid) vs Wounds to stop Bleeding with a bandage.`\n)","import Rule from '../../rule.js'\n\nexport const Recovery = new Rule(\n    `Recovery`, \n    `After a day of rest, roll [C vs total Wounds] to heal 1HP. On a Fail, take 1 DMG from infection.`\n)","import Rule from '../../rule.js'\nimport { Bleeding } from './Bleeding.js'\nimport { Recovery } from './Recovery.js'\n\nexport const Health = new Rule(\n    `Health`, \n    `[C x 3]. This is a measure of how many Wounds you can withstand. Damage causes Wounds. You start Bleeding when you take Wounds = [Health / 2] and you die when you take Wounds = Health.`, \n    [Bleeding, Recovery]\n)","import Rule from '../../rule.js'\n\nexport const Movement = new Rule(\n    `Movement`, \n    `Move once per rnd up to your Speed [A + C], or spend 2AP to Run at [Speed x 2]. Spend 1AP to drop Prone or stand up.`\n)","import Rule from '../../rule.js'\n\nexport const Time = new Rule(\n    `Time`, \n    `Combat time occurs in 3-second “rounds” (rnds). Each Player gets a turn each rnd. Either the GN decides or rolls [A vs A] to determine who goes first. At the end of each turn, the Player chooses who will go next among those who have not had a turn yet this rnd. At the end of the rnd the last Player to act decides who will start the next round.`\n)","import Rule from '../../rule.js'\n\nexport const Burning = new Rule(\n    `Burning`, \n    `If the Vehicle is at 0DR, it bursts into flames doing 1FDMG per rnd to all Occupants. It continues to burn for 1 minute per gallon of Fuel.`\n)","import Rule from '../../rule.js'\n\nexport const Conditions = new Rule(\n    `Conditions`, \n    `-1 DR and -1 Handling. Roll [Drive 9#] to maintain control upon getting a Condition, otherwise the vehicle Wrecks.`\n)","import Rule from '../../rule.js'\n\nexport const Occupants = new Rule(\n    `Occupants`, \n    `Passengers in a moving vehicle are Unstable. A vehicle provides Cover from RATKs with its DR.`\n)","import Rule from '../../rule.js'\n\nexport const Pedestrians = new Rule(\n    `Pedestrians`, \n    `Hitting a pedestrian does DMG = [vehicle DR]. -1 DR after hitting pedestrians = [vehicle DR].`\n)","import Rule from '../../rule.js'\n\nexport const Tires = new Rule(\n    `Tires`, \n    `Roll [-3 ATK vs Drive(Stunt)] to destroy a tire. If the tire is destroyed, the driver must roll [Drive 9#] or Wreck. If a front tire gets destroyed, the vehicle Wrecks automatically.`\n)","import Rule from '../../rule.js'\n\nexport const Wreck = new Rule(\n    `Wreck`, \n    `The vehicle comes to a violent stop suddenly this rnd. Occupants take [d6 DMG per 30yds of Speed] and are ejected from the vehicle, unless they are wearing seat belts, in which case the DMG is halved and they remain in their seats.`\n)","import { Actions } from './actions/Actions.js'\nimport { Attack } from './attack/Attack.js'\nimport { Communication } from './communication/Communication.js'\nimport { Damage } from './damage/Damage.js'\nimport { Defense } from './defense/Defense.js'\nimport { Health } from './health/Health.js'\nimport { Movement } from './movement/Movement.js'\nimport { Time } from './time/Time.js'\nimport { Vehicles } from './vehicles/Vehicles.js'\n\nexport const Combat = [\n    Time,\n    Communication,\n    Actions,\n    Movement,\n    Attack,\n    Defense,\n    Health,\n    Damage,\n    Vehicles\n]","import Rule from '../../rule.js'\nimport { Burning } from './Burning.js'\nimport { Conditions } from './Conditions.js'\nimport { Occupants } from './Occupants.js'\nimport { Pedestrians } from './Pedestrians.js'\nimport { Tires } from './Tires.js'\nimport { Wreck } from './Wreck.js'\n\nexport const Vehicles = new Rule(\n    `Vehicles`, \n    `Roll [Drive(Ram) vs Drive(Stunt)] to hit an enemy vehicle. If [loser’s DR <= winner’s DR], or if a vehicle takes [DMG > DR], the vehicle gets a Condition. 0 DR disables a vehicle. A Botch is a Wreck.`, \n    [Conditions, Occupants, Pedestrians, Tires, Wreck, Burning]\n)","import { Block } from './block/Block.js'\nimport { Dodge } from './dodge/Dodge.js'\nimport { Duck } from './duck/Duck.js'\nimport { FullDefense } from './fulldefense/FullDefense.js'\nimport { Hide } from './hide/Hide.js'\nimport { Protect } from './protect/Protect.js'\nimport { Sneak } from './sneak/Sneak.js'\n\nexport const DefensiveManeuvers = [\n    Block,\n    Dodge,\n    Duck,\n    FullDefense,\n    Hide,\n    Protect,\n    Sneak\n]","import Rule from '../../../rule.js'\n\nexport const Block = new Rule(\n    `Block`, \n    `Roll [Melee vs MATK or RATK when using a Shield] for DEF.`\n)","import Rule from '../../../rule.js'\n\nexport const Dodge = new Rule(\n    `Dodge`, \n    `Roll [Acrobatics vs MATK or RATK (Throw)] for DEF.`\n)","import Rule from '../../../rule.js'\n\nexport const Duck = new Rule(\n    `Duck`, \n    `Roll [Dodge vs ATK] to move up to your Speed to get behind Cover. If the ATK still hits, the Cover Material’s DR reduces the DMG. You will keep the benefits of Cover as long as it remains between you and the opponent.`\n)","import Rule from '../../../rule.js'\n\nexport const FullDefense = new Rule(\n    `Full Defense`, \n    `Declare Full Defense on your turn and forego all ATKs to get a bonus = [Reflex] to all Block and Dodge rolls until your next turn.`\n)","import Rule from '../../../rule.js'\n\nexport const Hide = new Rule(\n    `Hide`, \n    `Roll [Stealth vs Perception] to be Concealed. 0 Speed. +3 if Prone.`\n)","import Rule from '../../../rule.js'\n\nexport const Protect = new Rule(\n    `Protect`, \n    `Become the new target of an ATK targeting someone within 1yd of you. You may still Block as normal, but you cannot Dodge the ATK.`\n)","import Rule from '../../../rule.js'\n\nexport const Sneak = new Rule(\n    `Sneak`, \n    `Roll [Stealth vs Perception] to move Concealed at [Speed / 2].`\n)","import Rule from '../../../rule.js'\n\nexport const Aim = new Rule(\n    `Aim`, \n    `Spend AP to get an equal bonus to one ATK.`\n)","import Rule from '../../../rule.js'\nimport CalledShotTable from './CalledShotTable.svelte'\n\nexport const CalledShot = new Rule(\n    `Called Shot`, \n    `ATKs target the Torso by default. A Called Shot is an ATK targeting the Head, Arms, or Legs with added effects based on Location.`,\n    [],\n    CalledShotTable\n)","import Rule from '../../../rule.js'\n\nexport const Disarm = new Rule(\n    `Disarm`, \n    `Roll [MATK vs Melee (+ C if the weapon is used two-handed)]. The weapon flies d6 yds away. Attacker gets the weapon if Unarmed.`\n)","import Rule from '../../../rule.js'\n\nexport const Hold = new Rule(\n    `Hold`,\n    `Block ATKs using a Grabbed enemy as a Shield.`\n)","import Rule from '../../../rule.js'\n\nexport const Tackle = new Rule(\n    `Tackle`,\n    `Roll [C vs C] to go Prone with Grabbed enemy.`\n)","import Rule from '../../../rule.js'\n\nexport const Throw = new Rule(\n    `Throw`,\n    `Throw a Grabbed enemy up to [C] yds and takes Falling DMG. Prone.`\n)","import { Aim } from './aim/Aim.js'\nimport { CalledShot } from './calledshot/CalledShot.js'\nimport { Disarm } from './disarm/Disarm.js'\nimport { Grab } from './grab/Grab.js'\nimport { Push } from './push/Push.js'\nimport { Reload } from './reload/Reload.js'\nimport { Shove } from './shove/Shove.js'\nimport { Trip } from './trip/Trip.js'\n\nexport const OffensiveManeuvers = [\n    Aim,\n    CalledShot,\n    Disarm,\n    Grab,\n    Push,\n    Reload,\n    Shove,\n    Trip\n]","import Rule from '../../../rule.js'\nimport { Hold } from './Hold.js'\nimport { Tackle } from './Tackle.js'\nimport { Throw } from './Throw.js'\n\nexport const Grab = new Rule(\n    `Grab`, \n    `0DMG MATK to render an enemy Defenseless. You must have a free hand to Grab. Spend 1AP per rnd to retain Grab. Roll [(Acrobatics or Melee) vs Grab] to escape.`,\n    [Hold, Tackle, Throw]\n)","import Rule from '../../../rule.js'\n\nexport const Push = new Rule(\n    `Push`,\n    `Roll [C vs C] to push an enemy up to [C] yds. 0DMG.`\n)","import Rule from '../../../rule.js'\n\nexport const Reload = new Rule(\n    `Reload`,\n    `Replace a magazine or a single piece of ammunition (depending on the weapon) in a Ranged weapon.`\n)","import Rule from '../../../rule.js'\n\nexport const Shove = new Rule(\n    `Shove`,\n    `Roll [MATK vs C] to shove an enemy up to [C] yds away. 0DMG.`\n)","import Rule from '../../../rule.js'\n\nexport const Trip = new Rule(\n    `Trip`,\n    `Roll [MATK vs A] to knock an enemy Prone. 1DMG.`\n)","import { Distract } from './distract/Distract.js'\nimport { Encourage } from './encourage/Encourage.js'\nimport { Interrogate } from './interrogate/Interrogate.js'\nimport { Negotiate } from './negotiate/Negotiate.js'\nimport { Recruit } from './recruit/Recruit.js'\nimport { Taunt } from './taunt/Taunt.js'\nimport { Torture } from './torture/Torture.js'\n\nexport const SocialManeuvers = [\n    Distract,\n    Encourage,\n    Interrogate,\n    Negotiate,\n    Recruit,\n    Taunt,\n    Torture\n]","import Rule from '../../../rule.js'\n\nexport const Distract = new Rule(\n    `Distract`,\n    `Roll [Perform vs Perception]. Stun target for 1rnd.`\n)","import Rule from '../../../rule.js'\n\nexport const Encourage = new Rule(\n    `Encourage`,\n    `Roll [Leadership vs groups’ total D scores]. The group gets a bonus = [your D] for one specific roll each. A Botch is -1 to all rolls.`\n)","import Rule from '../../../rule.js'\n\nexport const Interrogate = new Rule(\n    `Interrogate`,\n    `Roll [Leadership vs D] to get information out of a subject who does not want to help, but without resorting to violence. Each roll takes d6 mins of conversation. If the interrogator Succeeds, the subject gives up a fact (wittingly or unwittingly). If the subject Succeeds, they become hardened against further questioning, imposing a -1 penalty on subsequent attempts. After Fails = [D], the interrogator gives up or the subject cracks and tells everything they know.`\n)","import Rule from '../../../rule.js'\n\nexport const Negotiate = new Rule(\n    `Negotiate`,\n    `If opposed parties are willing to talk out their differences, each side start with a list of demands. Roll [Socialize vs Socialize] once per demand. Attitude and situational modifiers should be applied by the GN. Success means you get your demand and the opposed negotiator concedes. Either side can choose to concede a demand without rolling. Some desires may be non-negotiable.`\n)","import Rule from '../../../rule.js'\n\nexport const Recruit = new Rule(\n    `Recruit`,\n    `Roll [Socialize vs D] to convince someone to join your side. If they are someone’s follower, roll [Leadership vs Leadership]. Attitude and situational modifiers should be applied by the GN.`\n)","import Rule from '../../../rule.js'\n\nexport const Taunt = new Rule(\n    `Taunt`,\n    `Roll [Leadership vs D]. Provoke the enemy into exclusively attacking you. The degree of Success is a penalty to the loser’s next roll. The enemy is Stunned for 1rnd if [penalty > enemy’s D].`\n)","import Rule from '../../../rule.js'\n\nexport const Torture = new Rule(\n    `Torture`,\n    `Roll [Medicine vs prisoner’s C] once per hour to cause a captive d6 Pain to soften their resolve without killing them. Failure does d6 DMG to the captive. Roll [D vs D] at the end of each hour (Pain penalty applies). Failure causes -1 Psyche loss. At 0 Psyche, either the torturer cannot do it anymore and gives up, or the captive is broken and can be controlled with Demeanor Skills automatically until freed.`\n)","import { DefensiveManeuvers } from './defensive/DefensiveManeuvers.js'\nimport { OffensiveManeuvers } from './offensive/OffensiveManeuvers.js'\nimport { SocialManeuvers } from './social/SocialManeuvers.js'\n\nexport const Maneuvers = DefensiveManeuvers.concat(OffensiveManeuvers).concat(SocialManeuvers)","import Rule from '../../rule.js'\n\nexport const Bleeding = new Rule(\n    `Bleeding`, \n    `1 DMG per min caused by your HP dropping to half or some other effect. Roll [(Medicine or C) vs DMG] to stop.`\n)","import Rule from '../../rule.js'\n\nexport const Burning = new Rule(\n    `Burning`, \n    `1 FDMG per rnd. Spend 1AP to stop, drop Prone, and roll Survival 9# to put out the flames.`\n)","import Rule from '../../rule.js'\n\nexport const Chase = new Rule(\n    `Chase`, \n    `Roll opposed [(Acrobatics, Athletics, Drive, or Tame) + Speed] each rnd. Chase ends when one side gets 3 Successes over the other.`\n)","import Rule from '../../rule.js'\n\nexport const Concealed = new Rule(\n    `Concealed`, \n    `If an opponent knows your position but cannot see you, their ATK is at a -6 penalty. Blasts are unaffected. Targets are Defenseless against ATKs from Concealed opponents.`\n)","import Rule from '../../rule.js'\nimport CoverTable from './CoverTable.svelte'\n\nexport const Cover = new Rule(\n    `Cover`, \n    `You can lean in and out of Cover to ATK as part of your action. All Cover except Glass makes you Concealed. If an opponent Waits until you lean out of Cover, they must make a Called Shot to hit an exposed Location. All DMG is negated against targets that are behind Cover if the Material DR is >= the weapon’s base DMG. If weapon DMG exceeds the Material DR, the Material DR acts as an Armor bonus for DMG reduction.`,\n    [],\n    CoverTable\n)","import Rule from '../../rule.js'\n\nexport const Defenseless = new Rule(\n    `Defenseless`, \n    `Use Reflex [Perception / 2] for DEF.`\n)","import Rule from '../../rule.js'\n\nexport const Falling = new Rule(\n    `Falling`, \n    `1DMG per 2yds. Roll [Acrobatics # = yds] to halve Falling DMG.`\n)","import Rule from '../../rule.js'\n\nexport const FriendlyFire = new Rule(\n    `Friendly Fire`, \n    `-3 RATK against targets within 1yd of your ally. If the RATK Fails, re-roll the RATK vs the ally’s Reflex.`\n)","import Rule from '../../rule.js'\n\nexport const Dehydration = new Rule(\n    `Dehydration`, \n    `People need 1 Water per day. 1 Pain per day without Water. This penalty is reduced by 1 per day with Water. Going without Water for a number of days = C is lethal.`\n)","import Rule from '../../rule.js'\n\nexport const Exhaustion = new Rule(\n    `Exhaustion`, \n    `People need 8 hours of sleep per day. 1 Pain per day without sufficient sleep. Go unconscious for 8 hours after days = C without sleep. Penalties go away after 8 hours of sleep.`\n)","import Rule from '../../rule.js'\n\nexport const Hypothermia = new Rule(\n    `Hypothermia`, \n    `People need warmth to stay alive. 1 Pain per hour of Hypothermia.  Reduce penalty by 1 per hour of warmth. Hypothermia for hours = C is lethal.`\n)","import Rule from '../../rule.js'\n\nexport const Starvation = new Rule(\n    `Starvation`, \n    `People need 1 Food per day. 1 Pain per week without Food. This penalty is reduced by 1 per day with Food. Going without Food for a number of weeks = C is lethal.`\n)","import Rule from '../../rule.js'\n\nexport const Suffocation = new Rule(\n    `Suffocation`, \n    `People need constant air supply. 1 Pain per minute without air. This penalty is reduced by 1 per minute with air. Going without air for a number of minutes = C is lethal.`\n)","import { Bleeding } from './bleeding/Bleeding.js'\nimport { Burning } from './burning/Burning.js'\nimport { Chase } from './chase/Chase.js'\nimport { Concealed } from './concealed/Concealed.js'\nimport { Cover } from './cover/Cover.js'\nimport { Defenseless } from './defenseless/Defenseless.js'\nimport { Falling } from './falling/Falling.js'\nimport { FriendlyFire } from './friendlyfire/FriendlyFire.js'\nimport { Needs } from './needs/Needs.js'\nimport { OffHand } from './offhand/OffHand.js'\nimport { Prone } from './prone/Prone.js'\nimport { Range } from './range/Range.js'\nimport { Stun } from './stun/Stun.js'\nimport { Unarmed } from './unarmed/Unarmed.js'\nimport { Unconscious } from './unconscious/Unconscious.js'\nimport { Unstable } from './unstable/Unstable.js'\nimport { Visibility } from './visibility/Visibility.js'\n\nexport const Situations = [\n    Bleeding,\n    Burning,\n    Chase,\n    Concealed,\n    Cover,\n    Defenseless,\n    Falling,\n    FriendlyFire,\n    Needs,\n    OffHand,\n    Prone,\n    Range,\n    Stun,\n    Unarmed,\n    Unconscious,\n    Unstable,\n    Visibility\n]","import Rule from '../../rule.js'\nimport { Dehydration } from './Dehydration.js'\nimport { Exhaustion } from './Exhaustion.js'\nimport { Hypothermia } from './Hypothermia.js'\nimport { Starvation } from './Starvation.js'\nimport { Suffocation } from './Suffocation.js'\n\nexport const Needs = new Rule(\n    `Needs`, \n    `1 Pain for each lacking Need over a given period of time:`,\n    [Dehydration, Exhaustion, Hypothermia, Starvation, Suffocation]\n)","import Rule from '../../rule.js'\n\nexport const OffHand = new Rule(\n    `Off-Hand`, \n    `-3 penalty to ATK with your Off-Hand.`\n)","import Rule from '../../rule.js'\n\nexport const Prone = new Rule(\n    `Prone`, \n    `You may drop Prone as part of your Movement. +1 RATK. +3 Stealth. Speed 1yd.`\n)","import Rule from '../../rule.js'\n\nexport const Range = new Rule(\n    `Range`, \n    `RATKs take a -1 penalty per additional RNG increment. MATKs take a modifier against Melee weapons that have a different RNG = [your weapon’s RNG - enemy weapon’s RNG].`\n)","import Rule from '../../rule.js'\n\nexport const Stun = new Rule(\n    `Stun`, \n    `Defenseless and cannot take actions. Prone if [Stunned > 1rnd].`\n)","import Rule from '../../rule.js'\n\nexport const Unarmed = new Rule(\n    `Unarmed`, \n    `If the target is conscious, the target rolls C vs DMG to avoid being knocked Unconscious. If the target is Unconscious, the target takes DMG = Melee score. DR is not depleted.`\n)","import Rule from '../../rule.js'\n\nexport const Unconscious = new Rule(\n    `Unconscious`, \n    `Unaware and unable to take actions. 0 DEF. Prone.`\n)","import Rule from '../../rule.js'\n\nexport const Unstable = new Rule(\n    `Unstable`, \n    `-3 penalty to physical rolls. -3 to RATKs at or from you.`\n)","import Rule from '../../rule.js'\n\nexport const Visibility = new Rule(\n    `Visibility`, \n    `-1 to -6 (Blind) to sight-based rolls, including ATK and DEF.`\n)","<script>\n    import router from '../routes'\n    import BackNextButtons from '../layout/BackNextButtons.svelte'\n    import RefList from '../layout/RefList.svelte'\n    import { Combat } from '../models/rules/combat/Combat.js'\n    import { Maneuvers } from '../models/rules/maneuvers/Maneuvers.js'\n    import { Situations } from '../models/rules/situations/Situations.js'\n\n    let step = 0\n    const pages = [\n        { name: 'Combat', rules: Combat },\n        { name: 'Maneuvers', rules: Maneuvers },\n        { name: 'Situations', rules: Situations }\n    ]\n    let selected = pages[step]\n\n    function nav(event) {\n        step = event.detail.number\n        if (step == pages.length || step < 0) { router.Home() }\n        else { selected = pages[step] }\n    }\n</script>\n\n<div class='ref-page'>\n    <svelte:component this={RefList} list={selected} />\n</div>\n<BackNextButtons step={step} on:message={nav} />\n\n<style>\n    .ref-page {\n        padding: 25px;\n        padding-bottom: 50px;\n    }\n</style>","<script>\n    import router from '../routes'\n\timport Creator from './Creator.svelte'\n\timport Reference from './Reference.svelte'\n</script>\n\n<div class='home-page'>\n    <button on:click={router.Creator}>Character Creator</button>\n    <button on:click={router.Reference}>Rules Reference</button>\n</div>\n\n<style>\n    .home-page {\n        padding: 25px;\n        text-align: center;\n    }\n    button {\n        padding: 2rem;\n        width: 70%;\n        margin: 1rem auto;\n    }\n</style>","<script>\n\timport ViewScreen from './layout/ViewScreen.svelte'\n\timport TitleBar from './layout/TitleBar.svelte'\n\timport DisplayWindow from './layout/DisplayWindow.svelte'\n\timport { Route, Router } from 'svelte-routing'\n\timport Home from './pages/Home.svelte'\n\timport Creator from './pages/Creator.svelte'\n\timport Reference from './pages/Reference.svelte'\n</script>\n\n<ViewScreen>\n\t<TitleBar />\n\t<DisplayWindow>\n\t\t<Router>\n\t\t\t<Route path='/' component='{Home}' />\n\t\t\t<Route path='/creator' component='{Creator}' />\n\t\t\t<Route path='/reference' component='{Reference}' />\n\t\t</Router>\n\t</DisplayWindow>\n</ViewScreen>","import App from './App.svelte'\n\nconst app = new App({\n\ttarget: document.body\n})\n\nexport default app\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","unsub","subscribe","unsubscribe","create_slot","definition","ctx","slot_ctx","get_slot_context","$$scope","get_slot_changes","changed","exclude_internal_props","props","result","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","undefined","set_data","set_input_value","input","current_component","set_current_component","get_current_component","Error","createEventDispatcher","type","detail","callbacks","e","createEvent","initCustomEvent","custom_event","slice","call","setContext","key","context","set","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","Set","shift","update","pop","has","add","fragment","dirty","before_update","p","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","globals","window","global","get_spread_object","spread_props","create_component","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","init","instance","create_fragment","not_equal","parent_component","prop_values","bound","Map","ready","ret","hydrate","l","Array","from","childNodes","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","LOCATION","ROUTER","getLocation","source","location","state","history","globalHistory","listeners","listener","popstateListener","action","to","replace","Date","now","replaceState","pushState","createHistory","Boolean","initialPathname","stack","pathname","search","states","entries","_","uri","split","createMemorySource","navigate","paramRe","SEGMENT_POINTS","STATIC_POINTS","DYNAMIC_POINTS","SPLAT_PENALTY","ROOT_POINTS","isSplat","segment","segmentize","stripSlashes","str","rankRoute","route","score","default","path","reduce","isRootSegment","test","isDynamic","pick","routes","match","default_","uriPathname","uriSegments","isRootUri","ranked","sort","rankRoutes","missed","params","routeSegments","max","Math","routeSegment","uriSegment","decodeURIComponent","join","dynamicMatch","exec","combinePaths","basepath","url","locationContext","routerContext","activeRoute","hasActiveRoute","base","routerBase","registerRoute","$base","_path","matchingRoute","$location","rs","unregisterRoute","bestMatch","$routes","routeParams","routeProps","levels","updates","to_null_out","accounted_for","n","$activeRoute","rest","$$props","router","Home","Creator","Reference","step","number","Trait","traitsList","agility","brains","constitution","demeanor","traitPoints","Skill","parent","skillsList","acrobatics","athletics","build","drive","larceny","leadership","medicine","melee","perception","perform","ranged","science","socialize","stealth","survival","tame","CharacterStore","scenario","completed","description","age","label","characterName","gender","hair","height","playerName","skin","weight","traits","skills","actions","setActions","floor","setBlock","dodge","setDodge","health","setHealth","luck","setLuck","psyche","setPsyche","reflex","setReflex","speed","setSpeed","xp","setXP","abilities","gear","armor","inventory","weapons","backpack","ammo","reflex_score","round","dodge_score","block_score","char","trait","min","remaining","updateTraits","keys","skill","updateSkills","startingSkillPoints","Ability","taken","notes","AbilityList","ability","modifyAbilities","Traits","Description","Skills","Properties","Abilities","Gear","selected","table","subrules","visible","list","rules","x","y","HideShow","Rule","Prepare","Actions","Attack","Communication","DamageReduction","FireDamage","Pain","Damage","Reflex","Defense","Bleeding","Recovery","Health","Movement","Time","Burning","Conditions","Occupants","Pedestrians","Tires","Wreck","Combat","DefensiveManeuvers","Aim","CalledShot","Disarm","Hold","Tackle","Throw","OffensiveManeuvers","SocialManeuvers","Maneuvers","concat","Chase","Concealed","Cover","Defenseless","Falling","FriendlyFire","Dehydration","Exhaustion","Hypothermia","Starvation","Suffocation","Situations","RefList","pages","body"],"mappings":"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"}