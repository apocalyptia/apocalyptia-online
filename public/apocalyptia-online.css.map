{
  "version": 3,
  "file": "apocalyptia-online.css",
  "sources": [
    "../src/layout/ViewScreen.svelte",
    "../src/layout/TitleBar.svelte",
    "../src/pages/Home.svelte",
    "../src/pages/Creator.svelte",
    "../src/layout/BackNextButtons.svelte",
    "../src/components/creator/Traits.svelte",
    "../src/components/creator/Skills.svelte",
    "../src/components/creator/Abilities.svelte"
  ],
  "sourcesContent": [
    "<div class='screen'>\n\t<div class='display'>\n        <slot />\n    </div>\n</div>\n\n<style>\n\t.screen {\n\t\theight: 100vh;\n\t\toverflow-x: hidden;\n\t\toverflow-y: auto;\n\t\twidth: 100vw;\n\t}\n\t.screen:before {\n\t\tanimation: hline 10s linear infinite;\n\t\tbackground: rgb(100, 250, 100, .1);\n\t\tcontent: '';\n\t\tfont-size: 1px;\n\t\theight: 1px;\n\t\tposition: absolute;\n\t\twidth: 100vw;\n\t\tz-index: 1000;\n\t}\n\t@keyframes hline {\n\t\t0%   { top: 0; }\n\t\t100% { top: 99%; }\n\t}\n\t.display {\n\t\tmargin-top: 40px;\n\t}\n</style>\n",
    "<script>\n    import router from '../routes'\n</script>\n\n<button class='title-bar' on:click={router.Home}>\n    <span class='title'>Apocalyptia Online</span>\n    <span class='beta'>beta</span>\n</button>\n\n<style>\n    .title-bar {\n        height: 40px;\n        position: fixed;\n        text-align: center;\n        top: 0;\n        width: 100vw;\n        z-index: 1;\n    }\n    .title {\n        font-size: 2rem;\n    }\n    .beta {\n        color: lightcoral;\n        border: 1px dotted lightcoral;\n        padding: 3px;\n    }\n</style>",
    "<script>\n    import router from '../routes'\n\timport Creator from './Creator.svelte'\n\timport Reference from './Reference.svelte'\n</script>\n\n<div class='page home-page'>\n    <button on:click={router.Creator}>Character Creator</button>\n    <button on:click={router.Reference}>Rules Reference</button>\n</div>\n\n<style>\n    .home-page {\n        text-align: center;\n    }\n    button {\n        padding: 2rem;\n        width: 70%;\n        margin: 1rem auto;\n    }\n</style>",
    "<script>\n    import router from '../routes'\n    import BackNextButtons from '../layout/BackNextButtons.svelte'\n\n    import Description from '../components/creator/Description.svelte'\n    import Traits from '../components/creator/Traits.svelte'\n    import Skills from '../components/creator/Skills.svelte'\n    import Properties from '../components/creator/Properties.svelte'\n    import Abilities from '../components/creator/Abilities.svelte'\n    import Gear from '../components/creator/Gear.svelte'\n\n    let step = 0\n    const options = [ Traits, Description, Skills, Properties, Abilities, Gear ]\n    let selected = options[step]\n\n    function nav(event) {\n        step = event.detail.number\n        if (step == options.length || step < 0) { router.Home() }\n        else { selected = options[step] }\n    }\n</script>\n\n<div>\n    <svelte:component this={selected}/>\n</div>\n<BackNextButtons step={step} on:message={nav} />\n\n<style>\n    div {\n        padding: 20px;\n        width: calc(100vw - 40px);\n    }\n</style>\n",
    "<script>\n    import { createEventDispatcher } from 'svelte'\n    export let step\n\n    const d = createEventDispatcher()\n\n    function back () { d('message', { number: --step }) }\n\n    function next() { d('message', { number: ++step }) }\n</script>\n\n<div>\n    <button on:click={back}>Back</button>\n    <button on:click={next}>Next</button>\n</div>\n\n<style>\n    div {\n        display: flex;\n        flex-direction: row;\n        position: fixed;\n        left: 0;\n        bottom: 0px;\n        height: 40px;\n        width: 100vw;\n    }\n    button {\n        border: 1px solid;\n        width: 50vw;\n    }\n</style>",
    "<script>\n    import { CharacterStore } from '../../models/stores'\n    let char\n    const unsubscribe = CharacterStore.subscribe(value => { char = value })\n\n    import { traitPoints } from '../../models/character/traits'\n\n    const traits = Object.keys(char.traits)\n\n    let remaining = traitPoints - traits.length\n\n    function updateTraits() {\n        let r = 0\n        for (const trait of traits) r += char.traits[trait].score\n        remaining = traitPoints - r\n    }\n</script>\n\n<div class='step'>\n    <div class='step-title'>\n        <h2>Traits</h2>\n    </div>\n    <div class='remaining'>\n        <h3>Points Remaining: {remaining}</h3>\n    </div>\n    {#each traits as trait}\n        <div class='stat-block'>\n            <span class='stat-label'>{char.traits[trait].name}</span>\n            <input\n                class='stat-input'\n                type='number'\n                min='1'\n                max={Math.min(char.traits[trait].max, (char.traits[trait].score + remaining))}\n                on:input={updateTraits}\n                bind:value={char.traits[trait].score}\n            >\n        </div>\n    {/each}\n</div>\n\n<style>\n    .remaining {\n        margin-left: 2rem;\n    }\n</style>",
    "<script>\n    import { CharacterStore } from '../../models/stores'\n    let char\n    const unsubscribe = CharacterStore.subscribe(value => { char = value })\n\n    const traits = Object.keys(char.traits)\n    const skills = Object.keys(char.skills)\n\n    let startingSkillPoints = char.traits.brains.score * 3\n    let remaining = startingSkillPoints\n    updateSkills()\n\n    function updateSkills() {\n        let r = 0\n        for (const skill of skills) r += char.skills[skill].score\n        remaining = startingSkillPoints - r\n    }\n</script>\n\n<div class='step'>\n    <div class='step-title'>\n        <h2>Skills</h2>\n    </div>\n    <div class='remaining'>\n        <h3>Points Remaining: {remaining}</h3>\n    </div>\n    {#each traits as trait}\n        <div class='skill-section'>\n            <div class='parent-trait-title'>\n                {char.traits[trait].name} Skills\n            </div>\n            {#each skills as skill}\n                {#if char.traits[trait].name == char.skills[skill].parent}\n                    <div class='stat-block'>\n                        <span class='stat-label'>{char.skills[skill].name}</span>\n                        <input\n                            class='stat-input'\n                            type='number'\n                            min='0'\n                            max='{Math.min(char.traits[trait].score, (char.skills[skill].score + remaining))}'\n                            on:input={updateSkills}\n                            bind:value={char.skills[skill].score}\n                        >\n                    </div>\n                {/if}\n            {/each}\n        </div>\n    {/each}\n</div>\n\n<style>\n    .skill-section{\n        border: 1px dashed var(--char-color);\n\t\tmargin: 20px 5px 20px 5px;\n        padding: 0 10px 10px 10px;\n    }\n    .parent-trait-title {\n        margin-bottom: 10px;\n    }\n    .remaining {\n        margin-left: 2rem;\n    }\n</style>",
    "<script>\n    import { CharacterStore } from '../../models/stores'\n    let char\n    const unsubscribe = CharacterStore.subscribe(value => { char = value })\n\n    import { AbilityList } from '../../models/character/abilities'\n\n    function modifyAbilities() {\n        char.abilities = []\n        AbilityList.forEach(function (ability) {\n            if (ability.taken > 0) {\n                char.abilities.push(ability)\n            }\n        })\n    }\n</script>\n\n<div class='step'>\n    <div class='step-title'>\n        <h2>Abilities</h2>\n    </div>\n    <div class='stat-block'>\n        <div class='abilities-table'>\n            <div class='ability-row header-row separator'>\n                <div class='m-col'>Name</div>\n                <div class='l-col'>Description</div>\n                <div class='s-col'>Max</div>\n                <div class='s-col'>XP</div>\n                <div class='s-col'>Taken</div>\n            </div>\n            {#each AbilityList as ability, index}\n                {#if AbilityList[index-1] != undefined && AbilityList[index].xp != AbilityList[index-1].xp}\n                    <div class='separator'></div>\n                {/if}\n                <div class='ability-row'>\n                    <div class='m-col'>{ability.name}</div>\n                    <div class='l-col'>{ability.description}</div>\n                    <div class='s-col'>{ability.max}</div>\n                    <div class='s-col'>{ability.xp}</div>\n                    <div class='s-col'>\n                        <input\n                            type='number'\n                            class='taken-number'\n                            min=0\n                            max={ability.max}\n                            bind:value={ability.taken}\n                            on:input={modifyAbilities}\n                        >\n                    </div>\n                </div>\n            {/each}\n        </div>\n    </div>\n</div>\n\n<style>\n    .abilities-table {\n        width: 100%;\n    }\n    .ability-row {\n        width: inherit;\n    }\n    .header-row {\n        font-size: 1.25em;\n    }\n    .l-col {\n        display: inline-block;\n        width: 37.5%;\n    }\n    .m-col {\n        display: inline-block;\n        width: 25%;\n    }\n    .s-col {\n        display: inline-block;\n        text-align: center;\n        width: 10%;\n    }\n    .separator {\n        border-bottom: 1px solid;\n        margin-bottom: 10px;\n        padding-bottom: 10px;\n    }\n</style>"
  ],
  "names": [],
  "mappings": "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"
}