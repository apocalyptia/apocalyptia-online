---------------------------------------------------------------------------------------------------

------ DEV PATH ------

finish integrating database (faunadb) with client app
*** Need to figure out netlify lambda function paths
*** Need to figure out query commands

finish user auth features (recovery, account settings)
apply ability mods to character (see list below)
create sorting options for all list pages
make narrator dashboard
make game group functionality
write the combat system methods (based on lambda functions)
make game group chat
get Amazon affiliate program set up and find links for all gear items

---------------------------------------------------------------------------------------------------

------ TODO LIST ------

Code Cleanup:
	Decouple script code in NavBar, CharacterControls, and Character Creator index into separate modules.
	Multilingual (undefined) error still persists.
	Make Creator steps into individual forms.
	Use semantic html tags wherever possible.

UX/UI:
	Make some CSS effects to reflect character's current Psyche.
	Figure out what to do about Tables.
	Make a sidenav menu for table of contents in Rules section.
	Probably also a sidenav for character sheet.

Gear.js:
	Storage: Unit conversions still need work.
	make Consumable functionality for Gear objects
	add fishing line
	add metal cup
	add firelog
	add trauma sheers
	add antiseptic of some kind

Manual:
	Improve search functionality.
	Put Expand/Collapse All button on rules.
	Finish integrating Narrator sections: Bases, Environment, Factions, Missions, Preparation, Scenarios, Difficulties, Psyche

Markup:
	Add <abbr> tag to all abbreviations. ex: <abbr title="Constitution">C</abbr>

Creator:
	Random Abilities and Gear are not persisting to the Finalize step.
	Characters aren't saving right.
	List Skill (Specialty) and list alpha by Skill. <= Problem here is that the ability becomes part of the character object.


---------------------------------------------------------------------------------------------------

------ BRAINSTORMING ------

- Bonus XP each session? Some is given by Narrator. Some points are allocated by vote by the Team. Some of these are auto-calculated by the system like badges (most damage dealt, move successes, etc)?

Abilities:
	Some kind of CQB Ability allowing you to split Rapid attacks between two targets.

Combat:
	Actions:
		Grappling: What about Submissions? Both Grabbed?
		Work on this more. Finish making separate Grappling-related Maneuvers where relevant. Make advanced Maneuvers conditional by Status more than relying on this staged approach. Add a static bonus (+3) or make opponent Defenseless when they are Grabbed. Defenseless fits an established pattern better I think. Maybe replace other bonuses with Defenseless effect? Some things should stack together though.
		'When you have Succeeded at a Grab, you get a bonus to any ATK made against the grappled opponent equal to your MATK roll - their DEF. If they attempt to escape but fail, readjust your bonus to be your most recent Grapple roll to maintain the grab - their failed escape roll. As an action while grappling, you may attempt to improve your grip and position by making another Melee vs Melee roll with your Success bonus. The result is your new Grapple Difficulty for the enemy to escape. If you fail, the enemy has moved 1 step up on the grapple scale toward escape. A grappled enemy must succeed on a grapple check to move 1 step up the grapple scale. A success while grabbed means escape. A fail readjusts the grapple bonus to be the difference between your roll and the attacker. When you succeed while grabbed, you may forego escape to use your roll to reverse the grapple and grab the attacker instead.'

Character:
	Character Sheet:
		Combine Health with Armor somehow.
		Make + item button do something.
		Refactor DescriptionSection.svelte to be an each list

Figure out a quick Jury-Rig version of Build.

---------------------------------------------------------------------------------------------------


Abilities that modify Character stats:
Fleet Footed
Fortunate
Healthy
Pain Tolerance
Practice
Self Improvement
Situational Awareness
Specialize
Unorthodox
Weapon Training


---------------------------------------------------------------------------------------------------

TODO List: FEATURES

audio/video playlist
automatic roll calculations
base management
calendar access
campaign invitations
developer blog
dynamic lighting
extra generator
field of view
first person mode
fog of war
item passing and trading (can make promises)
public and private chat logs
push notifications
regional and area map editor
rules bookmarking
social media sharing
sound effects library and player
team information
user accounts
user forum
utility programs: calculator, stopwatch, countdown timer, sketchpad, notepad
vehicle building, customization, and maintenance
video conferencing
visual special effects


---------------------------------------------------------------------------------------------------


Components that Need Lists:

classes/methods/character/initialize/InitializeDescription.js
classes/methods/character/initialize/InitializeProperties.js
classes/methods/character/initialize/InitializeSkills.js
classes/methods/character/initialize/InitializeTraits.js
classes/methods/character/reset/ResetAbilities.js
classes/methods/character/update/UpdateAbilities.js
classes/methods/character/update/UpdateProperties.js
components/buttons/NavButtonNext.svelte
components/character/creator/abilities/AbilityCard.svelte
components/character/creator/abilities/AbilityGroup.svelte
components/character/creator/abilities/AbilityModal.svelte
components/character/creator/abilities/AbilityModalList.svelte
components/character/creator/properties/PropertiesBlock.svelte
components/character/creator/properties/PropertiesFormulae.svelte
components/character/creator/steps/AbilitiesStep.svelte
components/character/creator/steps/SkillsStep.svelte
components/character/creator/steps/TraitsStep.svelte
components/character/load/CharacterList.svelte
components/character/sheet/CharacterSheet.svelte
components/character/sheet/gear/AddItemModal.svelte
components/character/sheet/sections/PropertiesSection.svelte
routes/creator.svelte
routes/roller.svelte
utils/GetItemList.js


Lists:

AbilitiesList
AccessoriesList
AmmoList
ArmorList
AttributesList
BombsList
CombatList
CoreList
CreationStepsList
DescriptionList
DocumentsList
DrugsList
ElectronicsList
EquipmentList
GearList
GetItemList
HazardsList
ManeuversList
ManualList
MasterGearList
MedicalList
MeleeWeaponsList
MiscellaneousList
NeedsList
ProjectileWeaponsList
PropertiesList
SheetSectionsList
SkillsList
StatusList
StorageList
ToolsList
TraitsList
WearablesList


Lists that Should be Converted to Stores:

ManualList
AbilitiesList.masterList
export let MasterAbilityList