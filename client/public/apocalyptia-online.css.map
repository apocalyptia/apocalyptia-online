{
  "version": 3,
  "file": "apocalyptia-online.css",
  "sources": [
    "../src/App.svelte",
    "../src/layout/ViewScreen.svelte",
    "../src/layout/TitleBar.svelte",
    "../src/pages/Creator.svelte",
    "../src/layout/NavButtons.svelte",
    "../src/components/creator/CreTraits.svelte",
    "../src/components/reference/RefList.svelte",
    "../src/components/creator/CreDescription.svelte",
    "../src/components/creator/CreAbilities.svelte",
    "../src/components/creator/CreSkills.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport ViewScreen from './layout/ViewScreen.svelte'\n\timport TitleBar from './layout/TitleBar.svelte'\n\timport { Route, Router } from 'svelte-routing'\n\timport Home from './pages/Home.svelte'\n\timport Creator from './pages/Creator.svelte'\n\timport Reference from './pages/Reference.svelte'\n\timport RefDice from './components/reference/RefDice.svelte'\n\timport RefCombat from './components/reference/RefCombat.svelte'\n\timport RefManeuvers from './components/reference/RefManeuvers.svelte'\n\timport RefSituations from './components/reference/RefSituations.svelte'\n</script>\n\n<ViewScreen>\n\t<TitleBar />\n\t<div class='display-window'>\n\t\t<Router>\n\t\t\t<Route path='/' component='{Home}' />\n\t\t\t<Route path='/creator' component='{Creator}' />\n\t\t\t<Route path='/reference' component='{Reference}' />\n\t\t\t<Route path='/reference/dice' component='{RefDice}' />\n\t\t\t<Route path='/reference/combat' component='{RefCombat}' />\n\t\t\t<Route path='/reference/maneuvers' component='{RefManeuvers}' />\n\t\t\t<Route path='/reference/situations' component='{RefSituations}' />\n\t\t</Router>\n\t</div>\n</ViewScreen>\n\n<style>\n\t.display-window {\n\t\theight: calc(100vh - 50px);\n\t\tposition: absolute;\n\t\ttop: 50px;\n\t\twidth: 100vw;\n\t}\n</style>",
    "<div class='view-screen'>\n\t<slot />\n</div>\n\n<style>\n\t.view-screen {\n\t\theight: 100vh;\n\t\toverflow-x: hidden;\n\t\toverflow-y: auto;\n\t\twidth: 100vw;\n\t}\n\t.view-screen:before {\n\t\tanimation: hline 10s linear infinite;\n\t\tbackground: rgb(100, 250, 100, .1);\n\t\tcontent: '';\n\t\tfont-size: 1px;\n\t\theight: 1px;\n\t\tposition: absolute;\n\t\twidth: 100vw;\n\t\tz-index: 1000;\n\t}\n\t@keyframes hline {\n\t\t0%   { top: 0; }\n\t\t100% { top: 99%; } \n\t}\n</style>\n",
    "<script>\n\timport { router } from '../routes'\n</script>\n\n<button class='title-bar' on:click={router.Home}>\n\t<span class='title'>Apocalyptia Online</span>\n\t<span class='beta'>beta</span>\n</button>\n\n<style>\n\t.title-bar {\n\t\theight: 50px;\n\t\tposition: fixed;\n\t\ttext-align: center;\n\t\ttop: 0;\n\t\twidth: 100vw;\n\t\tz-index: 1;\n\t}\n\t.title {\n\t\tfont-size: 1.8rem;\n\t}\n\t.beta {\n\t\tcolor: lightcoral;\n\t\tborder: 1px dotted lightcoral;\n\t\tfont-size: .8rem;\n\t\tpadding: 3px;\n\t}\n</style>",
    "<script>\n\timport { router } from '../routes'\n\n\timport Description from '../components/creator/CreDescription.svelte'\n\timport Traits from '../components/creator/CreTraits.svelte'\n\timport Skills from '../components/creator/CreSkills.svelte'\n\timport Properties from '../components/creator/CreProperties.svelte'\n\timport Abilities from '../components/creator/CreAbilities.svelte'\n\timport Gear from '../components/creator/CreGear.svelte'\n\n\n\tlet screen = {\n\t\tstep: 0,\n\t\toptions: [ Abilities, Description, Traits, Skills, Properties, Abilities, Gear ]\n\t}\n\tscreen.selected = screen.options[screen.step]\n\n\tconst back  = () => {\n\t\t--screen.step\n\t\tif (screen.step == screen.options.length || screen.step < 0) { router.Home() }\n\t\telse { screen.selected = screen.options[screen.step] }\n\t}\n\n\tconst home  = () => { router.Home() }\n\n\tconst next = () => { \n\t\t++screen.step\n\t\tif (screen.step == screen.options.length || screen.step < 0) { router.Home() }\n\t\telse { screen.selected = screen.options[screen.step] }\n\t}\n</script>\n\n<div class='display-page'>\n\t<div class='creator-page'>\n\t\t<svelte:component this={screen.selected}/>\n\t</div>\n\t<div class='nav-buttons'>\n\t\t<button class='nav-button' on:click={back}>Back</button>\n\t\t<button class='nav-button' on:click={home}>Home</button>\n\t\t<button class='nav-button' on:click={next}>Next</button>\n\t</div>\n</div>\n\n<style>\n\t.creator-page {\n\t\tpadding: 20px;\n\t}\n\t.nav-buttons {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tposition: fixed;\n\t\tleft: 0;\n\t\tbottom: 0;\n\t\theight: 50px;\n\t\twidth: 100vw;\n\t}\n\t.nav-button {\n\t\tborder: 1px solid;\n\t\twidth: 50vw;\n\t}\n</style>\n",
    "<script>\n\timport { router } from '../routes'\n\timport { createEventDispatcher } from 'svelte'\n\texport let screen\n\n\tlet ced = createEventDispatcher()\n\n\tconst back  = () => { ced('message', { number: --screen.step }) }\n\n\tconst home  = () => { router.Home() }\n\n\tconst next = () => { router.Traits() }\n\n\t// ced('message', { number: ++screen.step })\n</script>\n\n<div class='nav-buttons'>\n\t<button class='nav-button' on:click={back}>Back</button>\n\t<button class='nav-button' on:click={home}>Home</button>\n\t<button class='nav-button' on:click={next}>Next</button>\n</div>\n\n<style>\n\t.nav-buttons {\n\t\tbottom: 0px;\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\theight: 50px;\n\t\tleft: 0;\n\t\tposition: fixed;\n\t\twidth: 100vw;\n\t}\n\t.nav-button {\n\t\tborder: 1px solid;\n\t\twidth: 33.3vw;\n\t}\n</style>",
    "<script>\n\timport { fade } from 'svelte/transition'\n\timport { capitalize } from '../../functions/Capitalize'\n\timport { CharacterStore } from '../../stores'\n\tlet char\n\tconst unsubscribe = CharacterStore.subscribe(value => { char = value })\n\n\tconst traits = Object.keys(char.traits)\n\n\tconst traitPoints = 12\n\tlet remaining = traitPoints - traits.length\n\n\tconst countTraitPoints = (event) => {\n\t\tlet target = event.target\n\t\tlet traitCount = 0\n\t\ttraits.forEach((trait) => { traitCount += char.traits[trait].base })\n\t\tremaining = traitPoints - traitCount\n\t\tif (remaining < 0) {\n\t\t\tchar.traits[target.name].base -= 1\n\t\t\ttarget.value -= 1\n\t\t\tcountTraitPoints(event)\n\t\t}\n\t\tsetSkillMax()\n\t}\n\n\tconst setSkillMax = () => {\n\t\ttraits.forEach((trait) => {\n\t\t\tObject.keys(char.skills).forEach((skill) => {\n\t\t\t\tif (char.skills[skill].parent === capitalize(trait)) {\n\t\t\t\t\tchar.skills[skill].max = char.traits[trait].base\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n</script>\n\n<div class='traits-step' in:fade>\n\t<div class='step-title'>\n\t\t<h2>Traits</h2>\n\t</div>\n\t<div class='remaining'>\n\t\t<h3>Points Remaining: {remaining}</h3>\n\t</div>\n\t{#each traits as trait}\n\t\t<div class='stat-block'>\n\t\t\t<div class='stat-column name-column'>\n\t\t\t\t<span class='stat-label'>{char.traits[trait].name}</span>\n\t\t\t</div>\n\t\t\t<div class='stat-column value-column'>\n\t\t\t\t<div class='stat-input'>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclass='slider-input'\n\t\t\t\t\t\ttype='range'\n\t\t\t\t\t\tname='{char.traits[trait].name.toLowerCase()}'\n\t\t\t\t\t\tmin=1\n\t\t\t\t\t\tmax=6\n\t\t\t\t\t\tbind:value={char.traits[trait].base}\n\t\t\t\t\t\tinvalid={remaining < 0}\n\t\t\t\t\t\ton:input|preventDefault={(event) => countTraitPoints(event)}\n\t\t\t\t\t>\n\t\t\t\t</div>\n\t\t\t\t<div class='stat-input'>\n\t\t\t\t\t<div>1</div>\n\t\t\t\t\t<div>2</div>\n\t\t\t\t\t<div>3</div>\n\t\t\t\t\t<div>4</div>\n\t\t\t\t\t<div>5</div>\n\t\t\t\t\t<div>6</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t{/each}\n</div>\n\n<style>\n\t@media only screen and (max-width: 500px) {\n\t\t.stat-block {\n\t\t\tdisplay: block;\n\t\t}\n\t\t.stat-column {\n\t\t\twidth: 100%;\n\t\t}\n\t}\n\t@media only screen and (min-width: 500px) {\n\t\t.stat-column {\n\t\t\twidth: 50%;\n\t\t}\n\t}\n\t.remaining,\n\t.stat-label,\n\t.stat-column,\n\t.stat-input {\n\t\ttext-align: center;\n\t}\n\t.slider-input {\n\t\twidth: 100%;\n\t}\n\t.stat-input {\n\t\tdisplay: flex;\n\t\tflex-wrap: nowrap;\n\t}\n\t.stat-input div {\n\t\ttext-align: center;\n\t\twidth: calc(100%/6);\n\t}\n</style>",
    "<script>\n\timport { slide } from 'svelte/transition'\n\timport { HideShow } from '../../functions/HideShow'\n\n\texport let list\n</script>\n\n<div>\n\t<div class='separator'/>\n\t{#each list as rule}\n\t\t<div class='box' on:click={() => list = HideShow(rule, list)}>\n\t\t\t<span class='name'>{rule.name}</span>\n\t\t\t{#if rule.visible}\n\t\t\t\t<div class='description' transition:slide>\n\t\t\t\t\t{#each rule.description as desc}\n\t\t\t\t\t\t<p>{@html desc}</p>\n\t\t\t\t\t{/each}\n\t\t\t\t\t{#if rule.table}\n\t\t\t\t\t\t<div class='separator'/>\n\t\t\t\t\t\t<div class='table'><svelte:component this={rule.table}/></div>\n\t\t\t\t\t{/if}\n\t\t\t\t\t{#if rule.subrules}\n\t\t\t\t\t\t<ul class='sub-ul'>\n\t\t\t\t\t\t\t{#each rule.subrules as subrule}\n\t\t\t\t\t\t\t\t<div class='separator'/>\n\t\t\t\t\t\t\t\t<li class='sub-li'>\n\t\t\t\t\t\t\t\t\t<div class='sub-box'>\n\t\t\t\t\t\t\t\t\t\t<span class='sub-name'>{subrule.name}</span>\n\t\t\t\t\t\t\t\t\t\t<div class='sub-notes'>\n\t\t\t\t\t\t\t\t\t\t\t{@html subrule.description}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</li>\t\n\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\t\t<div class='separator'/>\n\t{/each}\n</div>\n\n<style>\n\t.box {\n\t\tborder: 1px dotted lime;\n\t\tpadding: 25px;\n\t}\n\t.name {\n\t\tfont-size: 1.2em;\n\t\tfont-weight: bold;\n\t}\n\t.description {\n\t\tpadding-top: 25px;\n\t}\n\t.separator {\n\t\theight: 25px;\n\t}\n\t.sub-ul {\n\t\tlist-style: none;\n\t}\n\t.sub-name {\n\t\tfont-size: 1.1em;\n\t\tfont-weight: bold;\n\t\ttext-decoration: underline;\n\t}\n\ttable {\n\t\tborder: 1px solid lime;\n\t\tpadding: 10px;\n\t}\n</style>",
    "<script>\n\timport { fade } from 'svelte/transition'\n\timport { femaleNames, maleNames } from '../../assets/lists/names.js'\n\timport { CharacterStore } from '../../stores'\n\tlet char\n\tconst unsubscribe = CharacterStore.subscribe(value => { char = value })\n\n\tconst random = (array) => { return array[Math.ceil(Math.random() * array.length) - 1] }\n\n\tconst randomName = () => {\n\t\tif (char.description.gender.value == 'Male') { char.description.characterName.value = random(maleNames) }\n\t\telse if (char.description.gender.value == 'Female') { char.description.characterName.value = random(femaleNames) } \n\t\telse { char.description.characterName.value = random([...femaleNames, ...maleNames]) }\n\t}\n\n\tconst randomHeight = () => {\n\t\tconst totalInches = Math.ceil((Math.random() * 14) + 60) // 5ft low, 5ft7in median, 6ft2in high\n\t\tconst feet = Math.floor(totalInches / 12)\n\t\tconst inches = Math.floor(totalInches % 12)\n\t\tchar.description.height.value = `${feet}' ${inches}\"`\n\t}\n\n\tconst randomWeight = () => { char.description.weight.value = `${Math.ceil(Math.random() * 100) + 100}lbs` } // 101 to 200 lbs\n\n\tconst randomHair = () => {\n\t\tchar.description.hair.value = random(\n\t\t\t[\n\t\t\t\t'Auburn',\n\t\t\t\t'Bald',\n\t\t\t\t'Black',\n\t\t\t\t'Blonde',\n\t\t\t\t'Brunette',\n\t\t\t\t'Gray',\n\t\t\t\t'Red',\n\t\t\t\t'White',\n\t\t\t]\n\t\t)\n\t}\n\n\tconst randomSkin = () => { char.description.skin.value = random(\n\t\t\t[\n\t\t\t\t'Black',\n\t\t\t\t'Brown',\n\t\t\t\t'Olive',\n\t\t\t\t'Pale',\n\t\t\t\t'Tan',\n\t\t\t\t'White',\n\t\t\t]\n\t\t) \n\t}\n\n\tconst randomGender = () => { char.description.gender.value = random(['Female', 'Male']) }\n\n\tconst randomAge = () => { char.description.age.value = Math.ceil((Math.random() * 33) + 17) }\n\n\tconst randomDescription = () => {\n\t\trandomAge()\n\t\trandomGender()\n\t\trandomSkin()\n\t\trandomHair()\n\t\trandomWeight()\n\t\trandomHeight()\n\t\trandomName()\n\t}\n\n\tconst descriptions = [\n\t\t[{ name: \"Height\", random: randomHeight }, { name: \"Weight\", random: randomWeight }],\n\t\t[{ name: \"Skin\", random: randomSkin }, { name: \"Hair\", random: randomHair }],\n\t\t[{ name: \"Gender\", random: randomGender }, { name: \"Age\", random: randomAge }]\n\t]\n</script>\n\n<div class='step' in:fade>\n\t<div class='step-title'>\n\t\t<h2>Description</h2>\n\t</div>\n\t<div class='stat-block'>\n\t\t<span class='stat-label'>Player:</span>\n\t\t<input\n\t\t\ttype='text'\n\t\t\tclass='player-name'\n\t\t\tbind:value={char.description.playerName.value}\n\t\t>\n\t</div>\n\t<div class='stat-block'>\n\t\t<span class='stat-label'>Character:</span>\n\t\t<input\n\t\t\ttype='text'\n\t\t\tclass='character-name'\n\t\t\tbind:value={char.description.characterName.value}\n\t\t>\n\t\t<button on:click={randomName}>Random</button>\n\t</div>\n\t{#each descriptions as pair}\n\t\t<div class='stat-block'>\n\t\t\t{#each pair as {name, random}}\n\t\t\t\t<div class='half-stat-block'>\n\t\t\t\t\t<div class='hs-container'>\n\t\t\t\t\t\t<span class='stat-label'>{name}:</span>\n\t\t\t\t\t\t<input class='half-input' bind:value={char.description[name.toLowerCase()].value}>\n\t\t\t\t\t\t<button on:click={random}>Random</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/each}\n\t\t</div>\n\t{/each}\n\t<div class='stat-block'>\n\t\t<button class='random-all' on:click={randomDescription}>Random Character</button>\n\t</div>\n</div>\n\n<style >\n\t.stat-label {\n\t\tdisplay: block;\n\t}\n\t.player-name {\n\t\twidth: 100%;\n\t}\n\t.character-name {\n\t\twidth: 100%;\n\t}\n\tinput {\n\t\theight: 1.75em;\n\t}\n\tbutton {\n\t\theight: 1.75em;\n\t\tpadding: 2px;\n\t}\n\t.random-all {\n\t\tmargin: auto;\n\t\tpadding: 5px;\n\t}\n\t.half-input {\n\t\twidth: 70%;\n\t}\n\t.half-stat-block {\n\t\ttext-align: center;\n\t\twidth: 50% ;\n\t}\n\t.hs-container {\n\t\tdisplay: inline-block;\n\t\ttext-align: left;\n\t}\n\t@media only screen and (max-width: 500px) {\n\t\tinput {\n\t\t\tdisplay: inline-block;\n\t\t\twidth: 100%;\n\t\t}\n\t\tbutton {\n\t\t\tdisplay: block;\n\t\t\tfloat: right;\n\t\t}\n\t\t.half-stat-block {\n\t\t\tdisplay: block;\n\t\t\tpadding: 5px;\n\t\t\twidth: 55%;\n\t\t}\n\t\t.half-input {\n\t\t\twidth: 50%;\n\t\t}\n\t}\n</style>",
    "<script>\n\timport { fade } from 'svelte/transition'\n\timport { AbilityList } from '../rules/Abilities'\n\timport { SkillList } from '../rules/Skills'\n\timport { CharacterStore } from '../../stores'\n\tlet char\n\tconst unsubscribe = CharacterStore.subscribe(value => { char = value })\n\n\tlet Abilities = AbilityList\n\n\tlet remaining = char.props.xp.score\n\n\tconst modifyAbilities = () => {\n\t\tremaining = char.props.xp.score\n\t\tchar.abilities = []\n\t\tfor (let i = 0; i < Abilities.length; i++) {\n\t\t\tif (Abilities[i].taken) {\n\t\t\t\tchar.abilities.push(Abilities[i])\n\t\t\t\tfor (let t = 0; t < Abilities[i].taken; t++) {\n\t\t\t\t\tremaining -= Abilities[i].xp\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<div class='abilities-step' in:fade>\n\t<div class='step-title'>\n\t\t<h2>Abilities</h2>\n\t</div>\n\t<div class='remaining'>\n\t\t<h3>XP Remaining: {remaining}</h3>\n\t</div>\n\t<div class='stat-block'>\n\t\t<div class='abilities-list'>\n\t\t\t<div class='header-row'>\n\t\t\t\t<div class='m-col name-header'>Name</div>\n\t\t\t\t<div class='l-col description-header'>Description</div>\n\t\t\t\t<div class='s-col max-header'>Max</div>\n\t\t\t\t<div class='s-col xp-header'>XP</div>\n\t\t\t\t<div class='s-col taken-header'>Taken</div>\n\t\t\t</div>\n\t\t\t{#each Abilities as ability, index}\n\t\t\t\t<br>\n\t\t\t\t{#if Abilities[index-1] != undefined && Abilities[index].xp != Abilities[index-1].xp}\n\t\t\t\t\t<div class='separator'></div>\n\t\t\t\t\t<br>\n\t\t\t\t{/if}\n\t\t\t\t<div class='ability-row'>\n\t\t\t\t\t<div class='m-col'>\n\t\t\t\t\t\t<span class='ability-name'>{ability.name}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='l-col'>\n\t\t\t\t\t\t<span class='description-label'>Descripiton: </span>\n\t\t\t\t\t\t<span class='ability-description'>{ability.description}</span>\n\t\t\t\t\t\t{#if ability.options.length}\n\t\t\t\t\t\t\t<span class='ability-options'>\n\t\t\t\t\t\t\t\t<select value={ability.options[0]}>\n\t\t\t\t\t\t\t\t\t{#each ability.options as option}\n\t\t\t\t\t\t\t\t\t\t<option value={option}>{option.name}</option>\n\t\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='s-col'>\n\t\t\t\t\t\t<span class='max-label'>Max: </span>\n\t\t\t\t\t\t<span class='ability-max'>{ability.max}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='s-col'>\n\t\t\t\t\t\t<span class='xp-label'>XP: </span>\n\t\t\t\t\t\t<span class='ability-xp'>{ability.xp}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='s-col'>\n\t\t\t\t\t\t<span class='taken-label'>Taken: </span>\n\t\t\t\t\t\t<span class='ability-taken'>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tclass='taken-number'\n\t\t\t\t\t\t\t\tbind:value={ability.taken}\n\t\t\t\t\t\t\t\tinvalid={remaining < 0}\n\t\t\t\t\t\t\t\ton:change={modifyAbilities}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=0>0</option>\n\t\t\t\t\t\t\t\t<option value=1>1</option>\n\t\t\t\t\t\t\t\t{#if ability.max > 1}\n\t\t\t\t\t\t\t\t\t<option value=2>2</option>\n\t\t\t\t\t\t\t\t\t<option value=3>3</option>\n\t\t\t\t\t\t\t\t\t{#if ability.max > 3}\n\t\t\t\t\t\t\t\t\t\t<option value=4>4</option>\n\t\t\t\t\t\t\t\t\t\t<option value=5>5</option>\n\t\t\t\t\t\t\t\t\t\t<option value=6>6</option>\n\t\t\t\t\t\t\t\t\t\t{#if ability.max > 6}\n\t\t\t\t\t\t\t\t\t\t\t<option value=7>7</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value=8>8</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value=9>9</option>\n\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/each}\n\t\t</div>\n\t</div>\n</div>\n\n<style>\n\t@media only screen and (max-width: 500px) {\n\t\t.header-row {\n\t\t\tdisplay: none;\n\t\t}\n\t\t.l-col, .m-col, .s-col {\n\t\t\tdisplay: block;\n\t\t}\n\t\t.ability-name,\n\t\t.description-label,\n\t\t.max-label,\n\t\t.xp-label,\n\t\t.taken-label {\n\t\t\tfont-weight: bold;\n\t\t}\n\t\t.ability-name {\n\t\t\ttext-decoration: underline;\n\t\t}\n\t}\n\t@media only screen and (min-width: 500px) {\n\t\t.name-header,\n\t\t.description-header,\n\t\t.max-header,\n\t\t.xp-header,\n\t\t.taken-header {\n\t\t\ttext-decoration: underline;\n\t\t}\n\t\t.description-label,\n\t\t.max-label,\n\t\t.xp-label,\n\t\t.taken-label {\n\t\t\tdisplay: none;\n\t\t}\n\t\t.l-col, .m-col, .s-col {\n\t\t\tdisplay: inline-block;\n\t\t}\n\t\t.l-col {\n\t\t\twidth: 50%;\n\t\t}\n\t\t.m-col {\n\t\t\twidth: 20%;\n\t\t}\n\t\t.s-col {\n\t\t\ttext-align: center;\n\t\t\twidth: 8%;\n\t\t}\n\t}\n\t.abilities-step {\n\t\tmargin-bottom: 5vh;\n\t\ttext-align: left;\n\t}\n\t.abilities-list {\n\t\twidth: 100%;\n\t}\n\t.remaining {\n\t\ttext-align: center;\n\t}\n\t.separator {\n\t\tborder-bottom: 1px solid;\n\t\tmargin-bottom: 10px;\n\t\tpadding-bottom: 10px;\n\t\twidth: 100%;\n\t}\n\t.taken-number {\n\t\twidth: 5vw;\n\t}\n</style>",
    "<script>\n\timport { fade } from 'svelte/transition'\n\timport { HideShow } from '../../functions/HideShow'\n\timport { CharacterStore } from '../../stores'\n\tlet char\n\tconst unsubscribe = CharacterStore.subscribe(value => { char = value })\n\n\tconst skills = Object.keys(char.skills)\n\n\tlet skillGroups = []\n\tObject.keys(char.traits).forEach((trait) => {\n\t\tskillGroups.push({\n\t\t\tname: trait, visible: false\n\t\t})\n\t})\n\tlet skillPoints = char.traits.brains.base * 3\n\tlet remaining = skillPoints\n\n\tconst countSkillPoints = (event) => {\n\t\tlet target = event.target\n\t\tlet skillCount = 0\n\t\tskills.forEach((skill) => { skillCount += char.skills[skill].base })\n\t\tremaining = skillPoints - skillCount\n\t\tif (remaining < 0 || target.value > char.skills[target.name].max) {\n\t\t\tchar.skills[target.name].base -= 1\n\t\t\ttarget.value -= 1\n\t\t\tcountSkillPoints(event)\n\t\t}\n\t}\n\n</script>\n\n<div class='skills-step' in:fade>\n\t<div class='step-title'>\n\t\t<h2>Skills</h2>\n\t</div>\n\t<div class='remaining'>\n\t\t<h3>Points Remaining: {remaining}</h3>\n\t</div>\n\t<div class='skill-list'>\n\t\t{#each skillGroups as group}\n\t\t\t<div class='trait-section'>\n\t\t\t\t<div class='parent-trait-title' on:click={() => skillGroups = HideShow(group, skillGroups)}>\n\t\t\t\t\t<h3>{char.traits[group.name].name} Skills</h3>\n\t\t\t\t</div>\n\t\t\t\t{#if group.visible}\n\t\t\t\t\t{#each skills as skill}\n\t\t\t\t\t\t{#if char.traits[group.name].name == char.skills[skill].parent}\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<div class='skill-block'>\n\t\t\t\t\t\t\t\t<div class='stat-column name-column'>\n\t\t\t\t\t\t\t\t\t<span class='stat-label'>{char.skills[skill].name}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='stat-column value-column'>\n\t\t\t\t\t\t\t\t\t<div class='stat-input'>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclass='slider-input'\n\t\t\t\t\t\t\t\t\t\t\ttype='range'\n\t\t\t\t\t\t\t\t\t\t\tname='{char.skills[skill].name.toLowerCase()}'\n\t\t\t\t\t\t\t\t\t\t\tmin=0\n\t\t\t\t\t\t\t\t\t\t\tmax=6\n\t\t\t\t\t\t\t\t\t\t\tbind:value={char.skills[skill].base}\n\t\t\t\t\t\t\t\t\t\t\tinvalid={(remaining < 0) || this.value > char.traits[group.name].base}\n\t\t\t\t\t\t\t\t\t\t\ton:input|preventDefault={(event) => countSkillPoints(event)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class='stat-input'>\n\t\t\t\t\t\t\t\t\t\t<div>0</div>\n\t\t\t\t\t\t\t\t\t\t<div>1</div>\n\t\t\t\t\t\t\t\t\t\t<div>2</div>\n\t\t\t\t\t\t\t\t\t\t<div>3</div>\n\t\t\t\t\t\t\t\t\t\t<div>4</div>\n\t\t\t\t\t\t\t\t\t\t<div>5</div>\n\t\t\t\t\t\t\t\t\t\t<div>6</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t{/each}\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t{/each}\n\t</div>\n</div>\n\n<style>\n\t@media only screen and (max-width: 500px) {\n\t\t.skill-block {\n\t\t\tdisplay: block;\n\t\t\twidth: 100%;\n\t\t}\n\t\t.stat-column {\n\t\t\twidth: 100%;\n\t\t}\n\t\t.trait-section {\n\t\t\ttext-align: center;\n\t\t}\n\t}\n\t@media only screen and (min-width: 500px) {\n\t\t.stat-column {\n\t\t\twidth: 100%;\n\t\t}\n\t}\n\t.skill-list {\n\t\tmargin-top: 25px;\n\t}\n\t.trait-section {\n\t\tborder-width: 2px;\n\t\tborder-style: dotted;\n\t\tdisplay: block;\n\t\tjustify-content: space-between;\n\t\tmargin: .5rem;\n\t\tpadding: 1rem;\n\t\talign-items: center;\n\t}\n\t.parent-trait-title, \n\t.remaining, \n\t.stat-label, \n\t.stat-column, \n\t.stat-input {\n\t\ttext-align: center;\n\t}\n\t.slider-input {\n\t\twidth: 100%;\n\t}\n\t.stat-input {\n\t\tdisplay: flex;\n\t\tflex-wrap: nowrap;\n\t}\n\t.stat-input div {\n\t\ttext-align: center;\n\t\tmin-width: calc(100%/7);\n\t}\n\t.step {\n\t\tmargin-bottom: 75px;\n\t}\n</style>"
  ],
  "names": [],
  "mappings": "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"
}